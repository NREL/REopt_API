#!/usr/bin/env bash

set -Eeuxo pipefail

# Used for Kubernetes initContainers to wait for the database to be migrated
# before allowing the app to spin up and be part of the live pods.
while true; do
  # Look for pending migrations by viewing the migration plan and looking for
  # any pending migrations identified by starting with "[ ]" (already run
  # migrations will be identified by "[X]". Keep waiting until all migrations
  # are run, and there are no more pending migrations.
  #
  # A little hacky, but based on info at https://stackoverflow.com/a/31847406
  #
  # If the app is upgraded to Django 3.1, then this could maybe be made simpler
  # with the new "migrate --check" support:
  # https://docs.djangoproject.com/en/3.1/ref/django-admin/#cmdoption-migrate-check
  migrations=$(python manage.py showmigrations --plan)
  { set +x; } 2>/dev/null
  pending_migrations=$(echo "$migrations" | grep '\[ \]' || true)
  if [ -z "$pending_migrations" ]; then
    echo "Migrations up to date."
    break
  else
    echo "Waiting for migrations to complete:"
    echo "$pending_migrations"
    sleep 3
  fi
  set -x
done
