@Library("tada-jenkins-library") _

pipeline {
  agent none
  options {
    disableConcurrentBuilds()
    buildDiscarder(logRotator(daysToKeepStr: "30"))
  }
  triggers {
    cron(env.BRANCH_NAME == "master" ? "H * * * *" : "")
  }

  parameters {
    booleanParam(
      name: "UNDEPLOY_DELETED_BRANCHES",
      defaultValue: true,
      description: "Undeploy branches that have been deleted from develop.",
    )
    booleanParam(
      name: "UNDEPLOY_MERGED_BRANCHES",
      defaultValue: true,
      description: "Undeploy branches that have been merged into the master branch (but not deleted) from develop.",
    )
    string(
      name: "UNDEPLOY_BRANCH_NAMES",
      defaultValue: "",
      description: "Undeploy the listed branch names (space separated for multiple branches) from develop.",
    )
  }

  stages {
    stage("deploy-agent") {
      agent {
        docker {
          image "harbor.nrel.gov/tada-public/tada-jenkins-kube-deploy:latest"
          args tadaDockerInDockerArgs()
        }
      }

      environment {
        TMPDIR = tadaDockerInDockerTmp()
        WERF_LOG_VERBOSE = "true"
        DEPLOY_ENV = "develop"
        RANCHER_PROJECT = "reopt-api-dev"
        DB_BASE_NAME = "reopt_api_develop"
      }

      stages {
        stage("undeploy-branches") {
          steps {
            withKubeConfig([credentialsId: "kubeconfig-nrel-reopt-test"]) {
              tadaUndeployEachBranch(rancherProject: env.RANCHER_PROJECT, undeployDeletedBranches: params.UNDEPLOY_DELETED_BRANCHES, undeployMergedBranches: params.UNDEPLOY_MERGED_BRANCHES, undeployBranchNames: params.UNDEPLOY_BRANCH_NAMES, primaryBranch: "master") {
                tadaWithWerfEnv(rancherProject: env.RANCHER_PROJECT, dbBaseName: env.DB_BASE_NAME) {
                  tadaUndeployBranch()
                }
              }
            }
          }
        }
      }
    }
  }
}
