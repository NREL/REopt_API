@Library("tada-jenkins-library") _

pipeline {
  agent any
  environment {
    TZ = 'America/Denver' // MST/MDT (handles daylight saving automatically)
    DEPLOY_IMAGE_REPO_DOMAIN = credentials("reopt-api-image-repo-domain")
    DEVELOPMENT_BASE_DOMAIN = credentials("reopt-api-development-base-domain")
    DEVELOPMENT_TEMP_BASE_DOMAIN = credentials("reopt-api-development-temp-base-domain")
    STAGING_BASE_DOMAIN = credentials("reopt-api-staging-base-domain")
    STAGING_TEMP_BASE_DOMAIN = credentials("reopt-api-staging-temp-base-domain")
    PRODUCTION_DOMAIN = credentials("reopt-api-production-domain")
    XPRESS_LICENSE_HOST = credentials("reopt-api-xpress-license-host")
    NREL_ROOT_CERT_URL_ROOT = credentials("reopt-api-nrel-root-cert-url-root")
  }
  triggers {
    cron('15 13 * * *') // 1:15 PM MST/MDT
  }

  parameters {
    booleanParam(
      name: "DEVELOPMENT_DEPLOY",
      defaultValue: false,
      description: "Development Deploy: Deploy to development.",
    )

    booleanParam(
      name: "STAGING_DEPLOY",
      defaultValue: false,
      description: "Staging Deploy: Deploy to staging for a non-master branch (master will always be deployed).",
    )
  }

  stages {
    stage("deploy-agent") {
      agent {
        docker {
          image "${DEPLOY_IMAGE_REPO_DOMAIN}/tada-public/tada-jenkins-kube-deploy:werf-1.2"
          args tadaDockerInDockerArgs()
        }
      }

      environment {
        TMPDIR = tadaDockerInDockerTmp()
      }

      stages {
        stage('Rolling Restart Celery and Julia') {
          stages {
            stage("deploy-development") {
              when { expression { params.DEVELOPMENT_DEPLOY } }

              environment {
                DEPLOY_ENV = "development"
              }

              steps {
                withKubeConfig([credentialsId: "kubeconfig-nrel-reopt-prod4"]) {
                  tadaWithWerfEnv(rancherProject: "reopt-api-dev", primaryBranch: "master", dbBaseName: "reopt_api_development", baseDomain: "${DEVELOPMENT_BASE_DOMAIN}") {
                    sh "kubectl -n '${env.DEPLOY_APP_NAMESPACE_NAME}' rollout restart deployment/reopt-api-celery-deployment"
                    sh "kubectl -n '${env.DEPLOY_APP_NAMESPACE_NAME}' rollout status deployment/reopt-api-celery-deployment --timeout=10m"

                    sh "kubectl -n '${env.DEPLOY_APP_NAMESPACE_NAME}' rollout restart deployment/reopt-api-julia-deployment"
                    sh "kubectl -n '${env.DEPLOY_APP_NAMESPACE_NAME}' rollout status deployment/reopt-api-julia-deployment --timeout=10m"
                  }
                }
              }
            }

            stage("deploy-staging") {
              when { expression { params.STAGING_DEPLOY || env.BRANCH_NAME == "master" } }

              environment {
                DEPLOY_ENV = "staging"
              }

              steps {
                withKubeConfig([credentialsId: "kubeconfig-nrel-reopt-prod4"]) {
                  tadaWithWerfEnv(rancherProject: "reopt-api-staging", primaryBranch: "master", dbBaseName: "reopt_api_staging", baseDomain: "${STAGING_BASE_DOMAIN}") {
                    sh "kubectl -n '${env.DEPLOY_APP_NAMESPACE_NAME}' rollout restart deployment/reopt-api-celery-deployment"
                    sh "kubectl -n '${env.DEPLOY_APP_NAMESPACE_NAME}' rollout status deployment/reopt-api-celery-deployment --timeout=10m"

                    sh "kubectl -n '${env.DEPLOY_APP_NAMESPACE_NAME}' rollout restart deployment/reopt-api-julia-deployment"
                    sh "kubectl -n '${env.DEPLOY_APP_NAMESPACE_NAME}' rollout status deployment/reopt-api-julia-deployment --timeout=10m"
                  }
                }
              }
            }

            stage("deploy-production") {
              when { branch "master" }

              environment {
                DEPLOY_ENV = "production"
              }

              steps {
                withKubeConfig([credentialsId: "kubeconfig-nrel-reopt-prod5"]) {
                  tadaWithWerfEnv(rancherProject: "reopt-api-production", primaryBranch: "master") {
                    sh "kubectl -n '${env.DEPLOY_APP_NAMESPACE_NAME}' rollout restart deployment/reopt-api-celery-deployment"
                    sh "kubectl -n '${env.DEPLOY_APP_NAMESPACE_NAME}' rollout status deployment/reopt-api-celery-deployment --timeout=10m"

                    sh "kubectl -n '${env.DEPLOY_APP_NAMESPACE_NAME}' rollout restart deployment/reopt-api-julia-deployment"
                    sh "kubectl -n '${env.DEPLOY_APP_NAMESPACE_NAME}' rollout status deployment/reopt-api-julia-deployment --timeout=10m"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
