# Generated by Django 2.2.13 on 2020-12-02 21:16

import django.contrib.postgres.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('reo', '0081_electrictariffmodel_chp_allowed_to_export'),
    ]

    operations = [
        migrations.CreateModel(
            name='NuclearModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('run_uuid', models.UUIDField(unique=True)),
                ('min_kw', models.FloatField(blank=True, null=True)),
                ('max_kw', models.FloatField(blank=True, null=True)),
                ('installed_cost_us_dollars_per_kw', models.FloatField(blank=True, null=True)),
                ('om_cost_us_dollars_per_kw', models.FloatField(blank=True, null=True)),
                ('om_cost_us_dollars_per_kwh', models.FloatField(blank=True, null=True)),
                ('min_turn_down_pct', models.FloatField(blank=True, null=True)),
                ('fuel_slope_mmbtu_per_kwh', models.FloatField(blank=True, null=True)),
                ('fuel_cost_us_dollars_per_mmbtu', models.FloatField(blank=True, null=True)),
                ('effective_full_power_days_between_refueling', models.FloatField(blank=True, null=True)),
                ('macrs_option_years', models.IntegerField(blank=True, null=True)),
                ('macrs_bonus_pct', models.FloatField(blank=True, null=True)),
                ('macrs_itc_reduction', models.FloatField(blank=True, null=True)),
                ('federal_itc_pct', models.FloatField(blank=True, null=True)),
                ('state_ibi_pct', models.FloatField(blank=True, null=True)),
                ('state_ibi_max_us_dollars', models.FloatField(blank=True, null=True)),
                ('utility_ibi_pct', models.FloatField(blank=True, null=True)),
                ('utility_ibi_max_us_dollars', models.FloatField(blank=True, null=True)),
                ('federal_rebate_us_dollars_per_kw', models.FloatField(blank=True, null=True)),
                ('state_rebate_us_dollars_per_kw', models.FloatField(blank=True, null=True)),
                ('state_rebate_max_us_dollars', models.FloatField(blank=True, null=True)),
                ('utility_rebate_us_dollars_per_kw', models.FloatField(blank=True, null=True)),
                ('utility_rebate_max_us_dollars', models.FloatField(blank=True, null=True)),
                ('pbi_us_dollars_per_kwh', models.FloatField(blank=True, null=True)),
                ('pbi_max_us_dollars', models.FloatField(blank=True, null=True)),
                ('pbi_years', models.FloatField(blank=True, null=True)),
                ('pbi_system_max_kw', models.FloatField(blank=True, null=True)),
                ('size_kw', models.FloatField(blank=True, null=True)),
                ('year_one_fuel_used_mmbtu', models.FloatField(blank=True, null=True)),
                ('year_one_electric_energy_produced_kwh', models.FloatField(blank=True, null=True)),
                ('year_one_power_production_series_kw', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), blank=True, null=True, size=None)),
                ('year_one_to_battery_series_kw', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), blank=True, null=True, size=None)),
                ('year_one_to_load_series_kw', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), blank=True, null=True, size=None)),
                ('year_one_to_grid_series_kw', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), blank=True, null=True, size=None)),
                ('total_fixed_om_cost_us_dollars', models.FloatField(blank=True, null=True)),
                ('total_variable_om_cost_us_dollars', models.FloatField(blank=True, null=True)),
                ('total_fuel_cost_us_dollars', models.FloatField(blank=True, null=True)),
                ('year_one_fixed_om_cost_us_dollars', models.FloatField(blank=True, null=True)),
                ('year_one_variable_om_cost_us_dollars', models.FloatField(blank=True, null=True)),
                ('year_one_fuel_cost_us_dollars', models.FloatField(blank=True, null=True)),
                ('year_one_effective_full_power_days', models.FloatField(blank=True, null=True)),
                ('years_until_full_burnup', models.FloatField(blank=True, null=True)),
            ],
        ),
    ]
