# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import django.contrib.postgres.fields
import picklefield.fields


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='RunInput',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('user_id', models.TextField(default=b'', blank=True)),
                ('api_version', models.TextField(default=b'', blank=True)),
                ('analysis_period', models.IntegerField(null=True, blank=True)),
                ('latitude', models.FloatField(null=True, blank=True)),
                ('longitude', models.FloatField(null=True, blank=True)),
                ('land_area', models.FloatField(null=True, blank=True)),
                ('roof_area', models.FloatField(null=True, blank=True)),
                ('pv_cost', models.FloatField(null=True, blank=True)),
                ('pv_om', models.FloatField(null=True, blank=True)),
                ('pv_kw_max', models.FloatField(null=True, blank=True)),
                ('pv_kw_min', models.FloatField(null=True, blank=True)),
                ('batt_cost_kw', models.FloatField(null=True, blank=True)),
                ('batt_cost_kwh', models.FloatField(null=True, blank=True)),
                ('batt_kw_max', models.FloatField(null=True, blank=True)),
                ('batt_kw_min', models.FloatField(null=True, blank=True)),
                ('batt_time_max', models.FloatField(null=True, blank=True)),
                ('batt_time_min', models.FloatField(null=True, blank=True)),
                ('intereconnection_limit', models.FloatField(null=True, blank=True)),
                ('net_metering_limit', models.FloatField(null=True, blank=True)),
                ('wholesale_rate', models.FloatField(null=True, blank=True)),
                ('owner_discount_rate', models.FloatField(null=True, blank=True)),
                ('offtaker_discount_rate', models.FloatField(null=True, blank=True)),
                ('blended_utility_rate', django.contrib.postgres.fields.ArrayField(default=[], null=True, base_field=models.TextField(blank=True), size=None, blank=True)),
                ('demand_charge', django.contrib.postgres.fields.ArrayField(default=[], null=True, base_field=models.TextField(blank=True), size=None, blank=True)),
                ('urdb_rate', picklefield.fields.PickledObjectField(null=True, editable=False)),
                ('rate_inflation', models.FloatField(null=True, blank=True)),
                ('rate_escalation', models.FloatField(null=True, blank=True)),
                ('offtaker_tax_rate', models.FloatField(null=True, blank=True)),
                ('owner_tax_rate', models.FloatField(null=True, blank=True)),
                ('rate_itc', models.FloatField(null=True, blank=True)),
                ('batt_replacement_cost_kw', models.FloatField(null=True, blank=True)),
                ('batt_replacement_cost_kwh', models.FloatField(null=True, blank=True)),
                ('batt_replacement_year', models.IntegerField(null=True, blank=True)),
                ('batt_replacement_cost_escalation', models.FloatField(null=True, blank=True)),
                ('flag_macrs', models.NullBooleanField()),
                ('flag_itc', models.NullBooleanField()),
                ('flag_bonus', models.NullBooleanField()),
                ('flag_replace_batt', models.NullBooleanField()),
                ('macrs_years', models.IntegerField(null=True, blank=True)),
                ('macrs_itc_reduction', models.FloatField(null=True, blank=True)),
                ('bonus_fraction', models.FloatField(null=True, blank=True)),
                ('load_profile_name', models.TextField(default=b'', null=True, blank=True)),
                ('load_size', models.FloatField(null=True, blank=True)),
                ('load_8760_kw', django.contrib.postgres.fields.ArrayField(default=[], null=True, base_field=models.TextField(blank=True), size=None, blank=True)),
                ('load_monthly_kwh', django.contrib.postgres.fields.ArrayField(default=[], null=True, base_field=models.TextField(blank=True), size=None, blank=True)),
                ('utility_name', models.TextField(default=b'', blank=True)),
                ('rate_name', models.TextField(default=b'', blank=True)),
                ('rate_degradation', models.FloatField(null=True, blank=True)),
                ('dataset', models.TextField(default=b'', blank=True)),
                ('inv_eff', models.FloatField(null=True, blank=True)),
                ('dc_ac_ratio', models.FloatField(null=True, blank=True)),
                ('azimuth', models.FloatField(null=True, blank=True)),
                ('system_capacity', models.FloatField(null=True, blank=True)),
                ('array_type', models.IntegerField(null=True, blank=True)),
                ('module_type', models.IntegerField(null=True, blank=True)),
                ('timeframe', models.TextField(default=b'', blank=True)),
                ('losses', models.FloatField(null=True, blank=True)),
                ('radius', models.FloatField(null=True, blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='RunOutput',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('run_input_id', models.IntegerField()),
                ('user_id', models.TextField(default=b'', null=True, blank=True)),
                ('api_version', models.TextField(default=b'', blank=True)),
                ('analysis_period', models.IntegerField(null=True, blank=True)),
                ('latitude', models.FloatField(null=True, blank=True)),
                ('longitude', models.FloatField(null=True, blank=True)),
                ('land_area', models.FloatField(null=True, blank=True)),
                ('roof_area', models.FloatField(null=True, blank=True)),
                ('pv_cost', models.FloatField(null=True, blank=True)),
                ('pv_om', models.FloatField(null=True, blank=True)),
                ('pv_kw_max', models.FloatField(null=True, blank=True)),
                ('pv_kw_min', models.FloatField(null=True, blank=True)),
                ('batt_cost_kw', models.FloatField(null=True, blank=True)),
                ('batt_cost_kwh', models.FloatField(null=True, blank=True)),
                ('batt_kw_max', models.FloatField(null=True, blank=True)),
                ('batt_kw_min', models.FloatField(null=True, blank=True)),
                ('batt_time_max', models.FloatField(null=True, blank=True)),
                ('batt_time_min', models.FloatField(null=True, blank=True)),
                ('intereconnection_limit', models.FloatField(null=True, blank=True)),
                ('net_metering_limit', models.FloatField(null=True, blank=True)),
                ('wholesale_rate', models.FloatField(null=True, blank=True)),
                ('owner_discount_rate', models.FloatField(null=True, blank=True)),
                ('offtaker_discount_rate', models.FloatField(null=True, blank=True)),
                ('blended_utility_rate', django.contrib.postgres.fields.ArrayField(default=[], null=True, base_field=models.TextField(blank=True), size=None, blank=True)),
                ('demand_charge', django.contrib.postgres.fields.ArrayField(default=[], null=True, base_field=models.TextField(blank=True), size=None, blank=True)),
                ('urdb_rate', picklefield.fields.PickledObjectField(null=True, editable=False)),
                ('rate_inflation', models.FloatField(null=True, blank=True)),
                ('rate_escalation', models.FloatField(null=True, blank=True)),
                ('offtaker_tax_rate', models.FloatField(null=True, blank=True)),
                ('owner_tax_rate', models.FloatField(null=True, blank=True)),
                ('rate_itc', models.FloatField(null=True, blank=True)),
                ('batt_replacement_cost_kw', models.FloatField(null=True, blank=True)),
                ('batt_replacement_cost_kwh', models.FloatField(null=True, blank=True)),
                ('batt_replacement_year', models.IntegerField(null=True, blank=True)),
                ('batt_replacement_cost_escalation', models.FloatField(null=True, blank=True)),
                ('flag_macrs', models.NullBooleanField()),
                ('flag_itc', models.NullBooleanField()),
                ('flag_bonus', models.NullBooleanField()),
                ('flag_replace_batt', models.NullBooleanField()),
                ('macrs_years', models.IntegerField(null=True, blank=True)),
                ('macrs_itc_reduction', models.FloatField(null=True, blank=True)),
                ('bonus_fraction', models.FloatField(null=True, blank=True)),
                ('load_profile_name', models.TextField(default=b'', null=True, blank=True)),
                ('load_size', models.FloatField(null=True, blank=True)),
                ('load_8760_kw', django.contrib.postgres.fields.ArrayField(default=[], null=True, base_field=models.TextField(blank=True), size=None, blank=True)),
                ('load_monthly_kwh', django.contrib.postgres.fields.ArrayField(default=[], null=True, base_field=models.TextField(blank=True), size=None, blank=True)),
                ('utility_name', models.TextField(default=b'', blank=True)),
                ('rate_name', models.TextField(default=b'', blank=True)),
                ('rate_degradation', models.FloatField(null=True, blank=True)),
                ('dataset', models.TextField(default=b'', blank=True)),
                ('inv_eff', models.FloatField(null=True, blank=True)),
                ('dc_ac_ratio', models.FloatField(null=True, blank=True)),
                ('azimuth', models.FloatField(null=True, blank=True)),
                ('system_capacity', models.FloatField(null=True, blank=True)),
                ('array_type', models.IntegerField(null=True, blank=True)),
                ('module_type', models.IntegerField(null=True, blank=True)),
                ('timeframe', models.TextField(default=b'', blank=True)),
                ('losses', models.FloatField(null=True, blank=True)),
                ('radius', models.FloatField(null=True, blank=True)),
                ('status', models.TextField(null=True, blank=True)),
                ('lcc', models.FloatField(null=True, blank=True)),
                ('npv', models.FloatField(null=True, blank=True)),
                ('utility_kwh', models.FloatField(null=True, blank=True)),
                ('pv_kw', models.FloatField(null=True, blank=True)),
                ('batt_kw', models.FloatField(null=True, blank=True)),
                ('batt_kwh', models.FloatField(null=True, blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
    ]
