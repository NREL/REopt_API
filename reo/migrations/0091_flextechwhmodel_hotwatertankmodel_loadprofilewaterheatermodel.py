# Generated by Django 2.2.13 on 2020-12-17 20:48

import django.contrib.postgres.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('reo', '0090_auto_20201216_1156'),
    ]

    operations = [
        migrations.CreateModel(
            name='FlexTechWHModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('run_uuid', models.UUIDField(unique=True)),
                ('a_matrix', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), blank=True, null=True, size=None)),
                ('b_matrix', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), blank=True, null=True, size=None)),
                ('u_inputs', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), blank=True, null=True, size=None)),
                ('init_temperatures_degC', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), blank=True, null=True, size=None)),
                ('n_temp_nodes', models.IntegerField(blank=True, null=True)),
                ('n_input_nodes', models.IntegerField(blank=True, null=True)),
                ('injection_node', models.IntegerField(blank=True, null=True)),
                ('water_node', models.IntegerField(blank=True, null=True)),
                ('water_mains_temp_degC', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), blank=True, null=True, size=None)),
                ('temperature_setpoint_degC', models.FloatField(blank=True, null=True)),
                ('size_kw', models.FloatField(blank=True, null=True)),
                ('year_one_power_production_series_kw', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), blank=True, null=True, size=None)),
                ('year_one_power_consumption_series_kw', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), blank=True, null=True, size=None)),
            ],
        ),
        migrations.CreateModel(
            name='HotWaterTankModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('run_uuid', models.UUIDField(unique=True)),
                ('min_size_gal', models.FloatField(blank=True, null=True)),
                ('max_size_gal', models.FloatField(blank=True, null=True)),
                ('temperature_lower_bound_degC', models.FloatField(blank=True, null=True)),
                ('temperature_upper_bound_degC', models.FloatField(blank=True, null=True)),
                ('installed_cost_us_dollars_per_gal', models.FloatField(blank=True, null=True)),
                ('size_gal', models.FloatField(blank=True, null=True)),
                ('year_one_temperature_series_degC', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), blank=True, null=True, size=None)),
            ],
        ),
        migrations.CreateModel(
            name='LoadProfileWaterHeaterModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('run_uuid', models.UUIDField(unique=True)),
                ('loads_GPH', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), blank=True, null=True, size=None)),
            ],
        ),
    ]
