@Library("tada-jenkins-library") _

properties([
  parameters([
    choice(
      name: "PARAM_STAGE",
      choices: "internal_c110p\ndevelopment\nstaging\nproduction",
      description: "Where do you want to deploy to?"
    ),

    [
      $class: "GitParameterDefinition",
      name: "PARAM_BRANCH",
      type: "PT_BRANCH",
      defaultValue: "origin/master",
      sortMode: "ASCENDING_SMART",
      selectedValue: "DEFAULT",
      quickFilterEnabled: true,
    ],
  ])
])

pipeline {
  agent any
  options {
    disableConcurrentBuilds()
  }

  environment {
    PATH = "${JENKINS_HOME}/.rbenv/bin:${JENKINS_HOME}/.rbenv/shims:/usr/local/bin:/sbin:/usr/sbin:/bin:/usr/bin"
    C110P_URL = credentials("reopt-api-c110p-url")
    DEV_URL = credentials("reopt-api-dev-url")
    STAGE_URL = credentials("reopt-api-stage-url")
    STAGE1_URL = credentials("reopt-api1-stage-url")
    STAGE2_URL = credentials("reopt-api2-stage-url")
    STAGE_BASEDOMAIN_URL = credentials("reopt-api-stage-base-url")
    PROD_URL = credentials("reopt-api-prod-url")
    PROD1_URL = credentials("reopt-api1-prod-url")
    PROD2_URL = credentials("reopt-api2-prod-url")
    XPRESSDIR = "/opt/xpressmp"
  }

  stages {
    stage("checkout-deploy-branch") {
      steps {
        tadaCheckoutDeployBranch("https://github.com/NREL/REopt_Lite_API.git")
      }
    }

    stage("rbenv-install") {
      steps {
        sh 'rbenv install --skip-existing $(cat .ruby-version)'
      }
    }

    stage("deploy") {
      steps {
        script {
          currentBuild.description = "Stage: $PARAM_STAGE Branch: $PARAM_BRANCH"

          sh "bundle install"
          sshagent(credentials: ["jenkins-ssh"]) {
            if(env.PARAM_STAGE == "development") {
              // TODO: Remove this if we setup branched deployments for
              // development (with real DNS subdomain support).
              sh "bundle exec cap ${PARAM_STAGE} deploy --trace DEV_BRANCH=${PARAM_BRANCH} DEBUG_DEPLOY=true"
            } else {
              sh "bundle exec cap ${PARAM_STAGE} deploy --trace BRANCH=${PARAM_BRANCH} DEBUG_DEPLOY=true"
            }
          }
        }
      }
    }
  }

  post {
    always {
      tadaSendNotifications()
    }
  }
}
