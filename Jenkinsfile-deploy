@Library("tada-jenkins-library") _

properties([
  parameters([
    choice(
      name: "PARAM_STAGE",
      choices: "internal_c110p\ndevelopment\nstaging\nproduction",
      description: "Where do you want to deploy to?"
    ),
  ])
])

pipeline {
  agent any
  options {
    disableConcurrentBuilds()
  }

  environment {
    PATH = "${JENKINS_HOME}/.rbenv/bin:${JENKINS_HOME}/.rbenv/shims:/usr/local/bin:/sbin:/usr/sbin:/bin:/usr/bin"
  }

  stages {
    stage("checkout-deploy-branch") {
      steps {
        script {
          if(env.PARAM_STAGE == "development") {
            git url: "git@github.nrel.gov:REopt/reopt_api.git", branch: "develop"
          } else if(env.PARAM_STAGE == "internal_c110p") {
            tadaCheckoutDeployBranch("git@github.nrel.gov:REopt/reopt_api.git")
          } else {
            git url: "git@github.nrel.gov:REopt/reopt_api.git", branch: "master"
          }
        }
      }
    }

    stage("rbenv-install") {
      steps {
        sh 'rbenv install --skip-existing $(cat .ruby-version)'
      }
    }

    stage("deploy") {
      steps {
        script {
          currentBuild.description = "Stage: $PARAM_STAGE"

          sh "bundle install"
          sshagent(credentials: ["jenkins-ssh"]) {
            sh "bundle exec cap ${PARAM_STAGE} deploy --trace DEBUG_DEPLOY=true"
          }
        }
      }
    }
  }

  post {
    always {
      tadaSendNotifications()
    }
  }
}
