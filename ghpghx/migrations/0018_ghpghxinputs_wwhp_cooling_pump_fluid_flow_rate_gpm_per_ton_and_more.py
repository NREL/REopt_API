# Generated by Django 4.0.7 on 2023-10-02 18:20

import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import ghpghx.models
import picklefield.fields


class Migration(migrations.Migration):

    dependencies = [
        ('ghpghx', '0017_ghpghxinputs_heat_pump_configuration'),
    ]

    operations = [
        migrations.AddField(
            model_name='ghpghxinputs',
            name='wwhp_cooling_pump_fluid_flow_rate_gpm_per_ton',
            field=models.FloatField(blank=True, default=3.0, help_text='Volumetric flow rate of the fluid in the hydronic chilled water cooling loop per peak ton cooling [GPM/ton]', validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(10.0)]),
        ),
        migrations.AddField(
            model_name='ghpghxinputs',
            name='wwhp_cooling_pump_min_speed_fraction',
            field=models.FloatField(blank=True, default=0.1, help_text='The minimum turndown fraction of the WWHP cooling pump. 1.0 is a constant speed pump.', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)]),
        ),
        migrations.AddField(
            model_name='ghpghxinputs',
            name='wwhp_cooling_pump_power_exponent',
            field=models.FloatField(blank=True, default=2.2, help_text='The WWHP cooling pump power curve exponent', validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(10.0)]),
        ),
        migrations.AddField(
            model_name='ghpghxinputs',
            name='wwhp_cooling_pump_power_watt_per_gpm',
            field=models.FloatField(blank=True, default=15.0, help_text='Pumping power required for a given volumetric flow rate of the fluid through the cooling pump [Watt/GPM]', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)]),
        ),
        migrations.AddField(
            model_name='ghpghxinputs',
            name='wwhp_cooling_setpoint_f',
            field=models.FloatField(blank=True, default=55.0, help_text='Setpoint temperature of the chilled water cooling loop [degF]', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)]),
        ),
        migrations.AddField(
            model_name='ghpghxinputs',
            name='wwhp_cop_map_eft_cooling',
            field=django.contrib.postgres.fields.ArrayField(base_field=picklefield.fields.PickledObjectField(editable=False), default=ghpghx.models.GHPGHXInputs._get_wwhp_cooling_cop_map, help_text="WWHP cooling heat pump coefficient of performance (COP) map: list of dictionaries, each with the key 'EFT' followed by keys representing temperature setpoints", null=True, size=None),
        ),
        migrations.AddField(
            model_name='ghpghxinputs',
            name='wwhp_cop_map_eft_heating',
            field=django.contrib.postgres.fields.ArrayField(base_field=picklefield.fields.PickledObjectField(editable=False), default=ghpghx.models.GHPGHXInputs._get_wwhp_heating_cop_map, help_text="WWHP heating heat pump coefficient of performance (COP) map: list of dictionaries, each with the key 'EFT' followed by keys representing temperature setpoints", null=True, size=None),
        ),
        migrations.AddField(
            model_name='ghpghxinputs',
            name='wwhp_heating_pump_fluid_flow_rate_gpm_per_ton',
            field=models.FloatField(blank=True, default=3.0, help_text='Volumetric flow rate of the fluid in the hydronic space heating loop per peak ton heating [GPM/ton]', validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(10.0)]),
        ),
        migrations.AddField(
            model_name='ghpghxinputs',
            name='wwhp_heating_pump_min_speed_fraction',
            field=models.FloatField(blank=True, default=0.1, help_text='The minimum turndown fraction of the WWHP heating pump. 1.0 is a constant speed pump.', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)]),
        ),
        migrations.AddField(
            model_name='ghpghxinputs',
            name='wwhp_heating_pump_power_exponent',
            field=models.FloatField(blank=True, default=2.2, help_text='The WWHP heating pump power curve exponent', validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(10.0)]),
        ),
        migrations.AddField(
            model_name='ghpghxinputs',
            name='wwhp_heating_pump_power_watt_per_gpm',
            field=models.FloatField(blank=True, default=15.0, help_text='Pumping power required for a given volumetric flow rate of the fluid through the heating pump [Watt/GPM]', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)]),
        ),
        migrations.AddField(
            model_name='ghpghxinputs',
            name='wwhp_heating_setpoint_f',
            field=models.FloatField(blank=True, default=140.0, help_text='Setpoint temperature of the space heating hot water loop [degF]', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(250.0)]),
        ),
        migrations.AlterField(
            model_name='ghpghxinputs',
            name='heat_pump_configuration',
            field=models.TextField(blank=True, default='WSHP', help_text='Specifies if the GHP system is centralized (WWHP) or decentralized (WSHP)', null=True),
        ),
    ]
