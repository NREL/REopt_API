# Generated by Django 4.0.7 on 2023-03-20 17:02

import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('ghpghx', '0009_ghpghxinputs_hybrid_sizing_flag_and_more'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='ghpghxoutputs',
            name='end_of_year_eft_f',
        ),
        migrations.AddField(
            model_name='ghpghxoutputs',
            name='end_of_year_ghx_lft_f',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), blank=True, default=list, help_text='End of year GHX leaving fluid temperature for all years in the last iteration of GHX sizing [degF]', null=True, size=None),
        ),
        migrations.AddField(
            model_name='ghpghxoutputs',
            name='ghx_soln_number_of_iterations',
            field=models.IntegerField(blank=True, help_text='The number of iterations taken to get GHX sizing', null=True),
        ),
        migrations.AddField(
            model_name='ghpghxoutputs',
            name='max_yearly_ghx_lft_f',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), blank=True, default=list, help_text='Maximum GHX leaving fluid temperature for all years in the last iteration of GHX sizing [degF]', null=True, size=None),
        ),
        migrations.AddField(
            model_name='ghpghxoutputs',
            name='min_yearly_ghx_lft_f',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), blank=True, default=list, help_text='Minimum GHX leaving fluid temperature for all years in the last iteration of GHX sizing [degF]', null=True, size=None),
        ),
        migrations.AddField(
            model_name='ghpghxoutputs',
            name='yearly_ghx_lft_series_f',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), blank=True, default=list, help_text='Hourly GHX leaving fluid temperature (lft), average across simulation years [kW]', null=True, size=None),
        ),
        migrations.AlterField(
            model_name='ghpghxinputs',
            name='aux_cooler_energy_use_intensity_kwe_per_kwt',
            field=models.FloatField(blank=True, default=0.02, help_text='The energy use intensity of the auxiliary cooler [kWe/kWt]', null=True, validators=[django.core.validators.MinValueValidator(0.001), django.core.validators.MaxValueValidator(1.0)]),
        ),
        migrations.AlterField(
            model_name='ghpghxinputs',
            name='aux_heater_thermal_efficiency',
            field=models.FloatField(blank=True, default=0.98, help_text='The thermal efficiency (thermal_out/fuel_in) of the auxiliary heater', null=True, validators=[django.core.validators.MinValueValidator(0.001), django.core.validators.MaxValueValidator(1.0)]),
        ),
        migrations.AlterField(
            model_name='ghpghxinputs',
            name='hybrid_sizing_flag',
            field=models.FloatField(blank=True, default=1.0, help_text='Possible values: -2 (size for heating), -1.0 (size for cooling), 1.0 (non-hybrid), value between 0-1 (fraction of full GHX size)', null=True),
        ),
    ]
