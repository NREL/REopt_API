from keys import *

"""
Django settings for reopt_api project.

Generated by 'django-admin startproject' using Django 1.8.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import django

URDB_NOTIFICATION_EMAIL_LIST = urdb_error_team_emails
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = secret_key_

# SECURITY WARNING: don't run with debug turned on in production!
"""
 NL 180208: The "SECURITY WARNING" above came from the django settings.py template.
 Unfortunately, if DEBUG = False, the django/tastypie API returns the TASTYPIE_CANNED_ERROR if the API
 is hit too rapidly. There are no other errors raised/logged when this occurs, and so far the only
 correlation is having DEBUG = False. However, with DEBUG = True, the API can be hit as rapid as one
 wishes, and no error is raised.

 This issue was made apparent during the NREL Cyber Security Vulnerability Assessment (their tools
 hit the API rapidly). So the assessment was carried out with DEBUG = True, and no vulnerabilities
 were identified. Thus, for the time being we are keeping DEBUG = True.

 One of the primary concerns with having DEBUG = True is that if an exception is not caught and handled
 then a user could receive a traceback message, which would provide some details about the server
 (such as file paths) to the user. However, to the best of my knowledge, we are catching exceptions,
 including unexpected ones, and only returning a generic error message to users.
"""
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'reo',
    'tastypie',
    'proforma',
    'resilience_stats',
    'django_celery_results',
   
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'reopt_api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


WSGI_APPLICATION = 'reopt_api.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default':{
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'HOST': 'reopt-prod-db1.nrel.gov',
        'NAME': 'reopt_production',
        'OPTIONS': {
            'options': '-c search_path=reopt_api'
        },
        'USER': production_user,
        'PASSWORD': production_user_password,
    }
}

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Results backend
CELERY_RESULT_BACKEND = 'django-db'

# celery task registration
CELERY_IMPORTS = (
    'reo.src.reopt',
    'reo.api',
    'reo.scenario',
    'reo.results',
)

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = '/static/'

os.environ.setdefault("DJANGO_SETTINGS_MODULE", "reopt_api.production_settings")
django.setup()
