# Generated by Django 4.0.7 on 2023-01-04 23:47

import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('reoptjl', '0017_merge_20230102_1621'),
    ]

    operations = [
        migrations.RenameField(
            model_name='chpoutputs',
            old_name='year_one_electric_production_series_kw',
            new_name='electric_production_series_kw',
        ),
        migrations.RenameField(
            model_name='chpoutputs',
            old_name='year_one_to_grid_series_kw',
            new_name='electric_to_grid_series_kw',
        ),
        migrations.RenameField(
            model_name='chpoutputs',
            old_name='year_one_to_battery_series_kw',
            new_name='electric_to_storage_series_kw',
        ),
        migrations.RenameField(
            model_name='chpoutputs',
            old_name='lifecycle_chp_fuel_cost_after_tax',
            new_name='lifecycle_fuel_cost_after_tax',
        ),
        migrations.RenameField(
            model_name='chpoutputs',
            old_name='lifecycle_chp_standby_cost_after_tax',
            new_name='lifecycle_standby_cost_after_tax',
        ),
        migrations.RenameField(
            model_name='chpoutputs',
            old_name='year_one_thermal_to_waste_series_mmbtu_per_hour',
            new_name='thermal_curtailed_series_mmbtu_per_hour',
        ),
        migrations.RenameField(
            model_name='chpoutputs',
            old_name='year_one_thermal_to_load_series_mmbtu_per_hour',
            new_name='thermal_to_load_series_mmbtu_per_hour',
        ),
        migrations.RenameField(
            model_name='chpoutputs',
            old_name='year_one_thermal_to_tes_series_mmbtu_per_hour',
            new_name='thermal_to_storage_series_mmbtu_per_hour',
        ),
        migrations.RenameField(
            model_name='chpoutputs',
            old_name='year_one_chp_fuel_cost_before_tax',
            new_name='year_one_fuel_cost_before_tax',
        ),
        migrations.RenameField(
            model_name='chpoutputs',
            old_name='year_one_chp_standby_cost_before_tax',
            new_name='year_one_standby_cost_before_tax',
        ),
        migrations.RenameField(
            model_name='coldthermalstorageoutputs',
            old_name='year_one_soc_series_fraction',
            new_name='soc_series_fraction',
        ),
        migrations.RenameField(
            model_name='coldthermalstorageoutputs',
            old_name='year_one_to_load_series_ton',
            new_name='storage_to_load_series_ton',
        ),
        migrations.RenameField(
            model_name='electricstorageoutputs',
            old_name='year_one_soc_series_fraction',
            new_name='soc_series_fraction',
        ),
        migrations.RenameField(
            model_name='electricstorageoutputs',
            old_name='year_one_to_load_series_kw',
            new_name='storage_to_load_series_kw',
        ),
        migrations.RenameField(
            model_name='existingboileroutputs',
            old_name='year_one_fuel_consumption_mmbtu',
            new_name='annual_fuel_consumption_mmbtu',
        ),
        migrations.RenameField(
            model_name='existingboileroutputs',
            old_name='year_one_thermal_production_mmbtu',
            new_name='annual_thermal_production_mmbtu',
        ),
        migrations.RenameField(
            model_name='existingboileroutputs',
            old_name='year_one_fuel_consumption_series_mmbtu_per_hour',
            new_name='fuel_consumption_series_mmbtu_per_hour',
        ),
        migrations.RenameField(
            model_name='existingboileroutputs',
            old_name='year_one_thermal_production_series_mmbtu_per_hour',
            new_name='thermal_production_series_mmbtu_per_hour',
        ),
        migrations.RenameField(
            model_name='existingboileroutputs',
            old_name='year_one_thermal_to_load_series_mmbtu_per_hour',
            new_name='thermal_to_load_series_mmbtu_per_hour',
        ),
        migrations.RenameField(
            model_name='existingboileroutputs',
            old_name='year_one_thermal_to_steamturbine_series_mmbtu_per_hour',
            new_name='thermal_to_steamturbine_series_mmbtu_per_hour',
        ),
        migrations.RenameField(
            model_name='existingboileroutputs',
            old_name='thermal_to_tes_series_mmbtu_per_hour',
            new_name='thermal_to_storage_series_mmbtu_per_hour',
        ),
        migrations.RenameField(
            model_name='generatoroutputs',
            old_name='average_annual_fuel_used_gal',
            new_name='annual_fuel_consumption_gal',
        ),
        migrations.RenameField(
            model_name='generatoroutputs',
            old_name='fuel_used_gal_bau',
            new_name='annual_fuel_consumption_gal_bau',
        ),
        migrations.RenameField(
            model_name='generatoroutputs',
            old_name='year_one_to_grid_series_kw',
            new_name='electric_to_grid_series_kw',
        ),
        migrations.RenameField(
            model_name='generatoroutputs',
            old_name='year_one_to_load_series_kw',
            new_name='electric_to_load_series_kw',
        ),
        migrations.RenameField(
            model_name='generatoroutputs',
            old_name='year_one_to_battery_series_kw',
            new_name='electric_to_storage_series_kw',
        ),
        migrations.RenameField(
            model_name='generatoroutputs',
            old_name='lifecycle_fixed_om_cost_bau',
            new_name='lifecycle_fixed_om_cost_after_tax_bau',
        ),
        migrations.RenameField(
            model_name='generatoroutputs',
            old_name='lifecycle_fuel_cost_bau',
            new_name='lifecycle_fuel_cost_after_tax_bau',
        ),
        migrations.RenameField(
            model_name='generatoroutputs',
            old_name='lifecycle_variable_om_cost_bau',
            new_name='lifecycle_variable_om_cost_after_tax_bau',
        ),
        migrations.RenameField(
            model_name='generatoroutputs',
            old_name='year_one_fixed_om_cost_bau',
            new_name='year_one_fixed_om_cost_before_tax_bau',
        ),
        migrations.RenameField(
            model_name='generatoroutputs',
            old_name='year_one_fuel_cost_bau',
            new_name='year_one_fuel_cost_before_tax_bau',
        ),
        migrations.RenameField(
            model_name='generatoroutputs',
            old_name='year_one_variable_om_cost_bau',
            new_name='year_one_variable_om_cost_before_tax_bau',
        ),
        migrations.RenameField(
            model_name='generatoroutputs',
            old_name='average_annual_energy_produced_kwh',
            new_name='annual_energy_produced_kwh',
        ),
        migrations.RenameField(
            model_name='hotthermalstorageoutputs',
            old_name='year_one_soc_series_fraction',
            new_name='soc_series_fraction',
        ),
        migrations.RenameField(
            model_name='hotthermalstorageoutputs',
            old_name='year_one_to_load_series_mmbtu_per_hour',
            new_name='storage_to_load_series_mmbtu_per_hour',
        ),
        migrations.RenameField(
            model_name='pvoutputs',
            old_name='average_annual_energy_exported_kwh',
            new_name='annual_energy_exported_kwh',
        ),
        migrations.RenameField(
            model_name='pvoutputs',
            old_name='average_annual_energy_produced_kwh',
            new_name='annual_energy_produced_kwh',
        ),
        migrations.RenameField(
            model_name='pvoutputs',
            old_name='average_annual_energy_produced_kwh_bau',
            new_name='annual_energy_produced_kwh_bau',
        ),
        migrations.RenameField(
            model_name='pvoutputs',
            old_name='year_one_to_grid_series_kw',
            new_name='electric_to_grid_series_kw',
        ),
        migrations.RenameField(
            model_name='pvoutputs',
            old_name='year_one_to_load_series_kw',
            new_name='electric_to_load_series_kw',
        ),
        migrations.RenameField(
            model_name='pvoutputs',
            old_name='year_one_to_battery_series_kw',
            new_name='electric_to_storage_series_kw',
        ),
        migrations.RenameField(
            model_name='pvoutputs',
            old_name='year_one_curtailed_production_series_kw',
            new_name='production_curtailed_series_kw',
        ),
        migrations.RenameField(
            model_name='windoutputs',
            old_name='average_annual_energy_exported_kwh',
            new_name='annual_energy_exported_kwh',
        ),
        migrations.RenameField(
            model_name='windoutputs',
            old_name='average_annual_energy_produced_kwh',
            new_name='annual_energy_produced_kwh',
        ),
        migrations.RenameField(
            model_name='windoutputs',
            old_name='year_one_to_grid_series_kw',
            new_name='electric_to_grid_series_kw',
        ),
        migrations.RenameField(
            model_name='windoutputs',
            old_name='year_one_to_load_series_kw',
            new_name='electric_to_load_series_kw',
        ),
        migrations.RenameField(
            model_name='windoutputs',
            old_name='year_one_to_battery_series_kw',
            new_name='electric_to_storage_series_kw',
        ),
        migrations.RenameField(
            model_name='windoutputs',
            old_name='year_one_curtailed_production_series_kw',
            new_name='production_curtailed_series_kw',
        ),
        migrations.RemoveField(
            model_name='chpoutputs',
            name='year_one_electric_energy_produced_kwh',
        ),
        migrations.RemoveField(
            model_name='chpoutputs',
            name='year_one_fuel_used_mmbtu',
        ),
        migrations.RemoveField(
            model_name='chpoutputs',
            name='year_one_thermal_energy_produced_mmbtu',
        ),
        migrations.RemoveField(
            model_name='chpoutputs',
            name='year_one_thermal_to_steamturbine_series_mmbtu_per_hour',
        ),
        migrations.RemoveField(
            model_name='chpoutputs',
            name='year_one_to_load_series_kw',
        ),
        migrations.RemoveField(
            model_name='electrictariffoutputs',
            name='year_one_demand_cost_series_per_kw',
        ),
        migrations.RemoveField(
            model_name='electrictariffoutputs',
            name='year_one_energy_cost_series_per_kwh',
        ),
        migrations.RemoveField(
            model_name='electricutilityoutputs',
            name='year_one_emissions_tonnes_CO2',
        ),
        migrations.RemoveField(
            model_name='electricutilityoutputs',
            name='year_one_emissions_tonnes_CO2_bau',
        ),
        migrations.RemoveField(
            model_name='electricutilityoutputs',
            name='year_one_emissions_tonnes_NOx',
        ),
        migrations.RemoveField(
            model_name='electricutilityoutputs',
            name='year_one_emissions_tonnes_NOx_bau',
        ),
        migrations.RemoveField(
            model_name='electricutilityoutputs',
            name='year_one_emissions_tonnes_PM25',
        ),
        migrations.RemoveField(
            model_name='electricutilityoutputs',
            name='year_one_emissions_tonnes_PM25_bau',
        ),
        migrations.RemoveField(
            model_name='electricutilityoutputs',
            name='year_one_emissions_tonnes_SO2',
        ),
        migrations.RemoveField(
            model_name='electricutilityoutputs',
            name='year_one_emissions_tonnes_SO2_bau',
        ),
        migrations.RemoveField(
            model_name='electricutilityoutputs',
            name='year_one_energy_supplied_kwh',
        ),
        migrations.RemoveField(
            model_name='electricutilityoutputs',
            name='year_one_energy_supplied_kwh_bau',
        ),
        migrations.RemoveField(
            model_name='electricutilityoutputs',
            name='year_one_to_battery_series_kw',
        ),
        migrations.RemoveField(
            model_name='electricutilityoutputs',
            name='year_one_to_load_series_kw',
        ),
        migrations.RemoveField(
            model_name='electricutilityoutputs',
            name='year_one_to_load_series_kw_bau',
        ),
        migrations.RemoveField(
            model_name='existingboileroutputs',
            name='year_one_thermal_to_tes_series_mmbtu_per_hour',
        ),
        migrations.RemoveField(
            model_name='existingchilleroutputs',
            name='year_one_electric_consumption_kwh',
        ),
        migrations.RemoveField(
            model_name='existingchilleroutputs',
            name='year_one_electric_consumption_series_kw',
        ),
        migrations.RemoveField(
            model_name='existingchilleroutputs',
            name='year_one_thermal_production_tonhour',
        ),
        migrations.RemoveField(
            model_name='existingchilleroutputs',
            name='year_one_to_load_series_ton',
        ),
        migrations.RemoveField(
            model_name='existingchilleroutputs',
            name='year_one_to_tes_series_ton',
        ),
        migrations.RemoveField(
            model_name='generatoroutputs',
            name='average_annual_energy_exported_kwh',
        ),
        migrations.RemoveField(
            model_name='generatoroutputs',
            name='year_one_emissions_bau_lb_C02',
        ),
        migrations.RemoveField(
            model_name='generatoroutputs',
            name='year_one_emissions_lb_C02',
        ),
        migrations.RemoveField(
            model_name='generatoroutputs',
            name='year_one_energy_produced_kwh',
        ),
        migrations.RemoveField(
            model_name='siteoutputs',
            name='year_one_emissions_from_fuelburn_tonnes_CO2',
        ),
        migrations.RemoveField(
            model_name='siteoutputs',
            name='year_one_emissions_from_fuelburn_tonnes_CO2_bau',
        ),
        migrations.RemoveField(
            model_name='siteoutputs',
            name='year_one_emissions_from_fuelburn_tonnes_NOx',
        ),
        migrations.RemoveField(
            model_name='siteoutputs',
            name='year_one_emissions_from_fuelburn_tonnes_NOx_bau',
        ),
        migrations.RemoveField(
            model_name='siteoutputs',
            name='year_one_emissions_from_fuelburn_tonnes_PM25',
        ),
        migrations.RemoveField(
            model_name='siteoutputs',
            name='year_one_emissions_from_fuelburn_tonnes_PM25_bau',
        ),
        migrations.RemoveField(
            model_name='siteoutputs',
            name='year_one_emissions_from_fuelburn_tonnes_SO2',
        ),
        migrations.RemoveField(
            model_name='siteoutputs',
            name='year_one_emissions_from_fuelburn_tonnes_SO2_bau',
        ),
        migrations.RemoveField(
            model_name='siteoutputs',
            name='year_one_emissions_tonnes_CO2',
        ),
        migrations.RemoveField(
            model_name='siteoutputs',
            name='year_one_emissions_tonnes_CO2_bau',
        ),
        migrations.RemoveField(
            model_name='siteoutputs',
            name='year_one_emissions_tonnes_NOx',
        ),
        migrations.RemoveField(
            model_name='siteoutputs',
            name='year_one_emissions_tonnes_NOx_bau',
        ),
        migrations.RemoveField(
            model_name='siteoutputs',
            name='year_one_emissions_tonnes_PM25',
        ),
        migrations.RemoveField(
            model_name='siteoutputs',
            name='year_one_emissions_tonnes_PM25_bau',
        ),
        migrations.RemoveField(
            model_name='siteoutputs',
            name='year_one_emissions_tonnes_SO2',
        ),
        migrations.RemoveField(
            model_name='siteoutputs',
            name='year_one_emissions_tonnes_SO2_bau',
        ),
        migrations.RemoveField(
            model_name='windoutputs',
            name='year_one_energy_produced_kwh',
        ),
        migrations.AddField(
            model_name='chpoutputs',
            name='annual_electric_production_kwh',
            field=models.FloatField(blank=True, help_text='Electric energy produced in a year [kWh]', null=True),
        ),
        migrations.AddField(
            model_name='chpoutputs',
            name='annual_fuel_consumption_mmbtu',
            field=models.FloatField(blank=True, help_text='Fuel consumed in a year [MMBtu]', null=True),
        ),
        migrations.AddField(
            model_name='chpoutputs',
            name='annual_thermal_production_mmbtu',
            field=models.FloatField(blank=True, help_text='Thermal energy produced in a year [MMBtu]', null=True),
        ),
        migrations.AddField(
            model_name='chpoutputs',
            name='electric_to_load_series_kw',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), blank=True, default=list, help_text='Electric power serving the electric load time-series array [kW]', size=None),
        ),
        migrations.AddField(
            model_name='chpoutputs',
            name='thermal_to_steamturbine_series_mmbtu_per_hour',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), blank=True, default=list, help_text='Thermal power to steam turbine time-series array [MMBtu/hr]', size=None),
        ),
        migrations.AddField(
            model_name='electricutilityoutputs',
            name='annual_emissions_tonnes_CO2',
            field=models.FloatField(blank=True, help_text="Total tons of CO2 emissions associated with the site's grid-purchased electricity in an average year. If include_exported_elec_emissions_in_total is False, this value only reflects grid purchaes. Otherwise, it accounts for emissions offset from any export to the grid.", null=True),
        ),
        migrations.AddField(
            model_name='electricutilityoutputs',
            name='annual_emissions_tonnes_CO2_bau',
            field=models.FloatField(blank=True, help_text="Total tons of CO2 emissions associated with the site's grid-purchased electricity in an average year in the BAU case. If include_exported_elec_emissions_in_total is False, this value only reflects grid purchaes. Otherwise, it accounts for emissions offset from any export to the grid.", null=True),
        ),
        migrations.AddField(
            model_name='electricutilityoutputs',
            name='annual_emissions_tonnes_NOx',
            field=models.FloatField(blank=True, help_text="Total tons of NOx emissions associated with the site's grid-purchased electricity in an average year. If include_exported_elec_emissions_in_total is False, this value only reflects grid purchaes. Otherwise, it accounts for emissions offset from any export to the grid.", null=True),
        ),
        migrations.AddField(
            model_name='electricutilityoutputs',
            name='annual_emissions_tonnes_NOx_bau',
            field=models.FloatField(blank=True, help_text="Total tons of NOx emissions associated with the site's grid-purchased electricity in an average year in the BAU case. If include_exported_elec_emissions_in_total is False, this value only reflects grid purchaes. Otherwise, it accounts for emissions offset from any export to the grid.", null=True),
        ),
        migrations.AddField(
            model_name='electricutilityoutputs',
            name='annual_emissions_tonnes_PM25',
            field=models.FloatField(blank=True, help_text="Total tons of PM2.5 emissions associated with the site's grid-purchased electricity in an average year. If include_exported_elec_emissions_in_total is False, this value only reflects grid purchaes. Otherwise, it accounts for emissions offset from any export to the grid.", null=True),
        ),
        migrations.AddField(
            model_name='electricutilityoutputs',
            name='annual_emissions_tonnes_PM25_bau',
            field=models.FloatField(blank=True, help_text="Total tons of PM2.5 emissions associated with the site's grid-purchased electricity in an average year in the BAU case. If include_exported_elec_emissions_in_total is False, this value only reflects grid purchaes. Otherwise, it accounts for emissions offset from any export to the grid.", null=True),
        ),
        migrations.AddField(
            model_name='electricutilityoutputs',
            name='annual_emissions_tonnes_SO2',
            field=models.FloatField(blank=True, help_text="Total tons of CO2 emissions associated with the site's grid-purchased electricity in an average year. If include_exported_elec_emissions_in_total is False, this value only reflects grid purchaes. Otherwise, it accounts for emissions offset from any export to the grid.", null=True),
        ),
        migrations.AddField(
            model_name='electricutilityoutputs',
            name='annual_emissions_tonnes_SO2_bau',
            field=models.FloatField(blank=True, help_text="Total tons of SO2 emissions associated with the site's grid-purchased electricity in an average year in the BAU case. If include_exported_elec_emissions_in_total is False, this value only reflects grid purchaes. Otherwise, it accounts for emissions offset from any export to the grid.", null=True),
        ),
        migrations.AddField(
            model_name='electricutilityoutputs',
            name='annual_energy_supplied_kwh',
            field=models.FloatField(blank=True, help_text='Average annual energy supplied from grid to load', null=True),
        ),
        migrations.AddField(
            model_name='electricutilityoutputs',
            name='annual_energy_supplied_kwh_bau',
            field=models.FloatField(blank=True, help_text='Average annual energy supplied from grid to load', null=True),
        ),
        migrations.AddField(
            model_name='electricutilityoutputs',
            name='electric_to_load_series_kw',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True), blank=True, default=list, help_text='Optimal average annual grid to load time series', size=None),
        ),
        migrations.AddField(
            model_name='electricutilityoutputs',
            name='electric_to_load_series_kw_bau',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True), blank=True, default=list, help_text='Business as usual average annual grid to load time series', size=None),
        ),
        migrations.AddField(
            model_name='electricutilityoutputs',
            name='electric_to_storage_series_kw',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True), blank=True, default=list, help_text='Optimal average annual grid to battery time series', size=None),
        ),
        migrations.AddField(
            model_name='existingchilleroutputs',
            name='annual_electric_consumption_kwh',
            field=models.FloatField(blank=True, help_text='Annual chiller electric consumption [kWh]', null=True),
        ),
        migrations.AddField(
            model_name='existingchilleroutputs',
            name='annual_thermal_production_tonhour',
            field=models.FloatField(blank=True, help_text='Annual chiller thermal production [Ton Hour', null=True),
        ),
        migrations.AddField(
            model_name='existingchilleroutputs',
            name='electric_consumption_series_kw',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True), blank=True, default=list, help_text='Annual hourly time series of chiller electric consumption [kW]', null=True, size=None),
        ),
        migrations.AddField(
            model_name='existingchilleroutputs',
            name='thermal_to_load_series_ton',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True), blank=True, default=list, help_text='Annual hourly time series of electric chiller thermal to cooling load [Ton]', null=True, size=None),
        ),
        migrations.AddField(
            model_name='existingchilleroutputs',
            name='thermal_to_storage_series_ton',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True), blank=True, default=list, help_text='Annual hourly time series of electric chiller thermal to cold TES [Ton]', null=True, size=None),
        ),
        migrations.AddField(
            model_name='siteoutputs',
            name='annual_emissions_from_fuelburn_tonnes_CO2',
            field=models.FloatField(blank=True, help_text="Total tons of CO2 emissions associated with the site's onsite fuel burn in an average year.", null=True),
        ),
        migrations.AddField(
            model_name='siteoutputs',
            name='annual_emissions_from_fuelburn_tonnes_CO2_bau',
            field=models.FloatField(blank=True, help_text="Total tons of CO2 emissions associated with the site's onsite fuel burn in an average year in the BAU case.", null=True),
        ),
        migrations.AddField(
            model_name='siteoutputs',
            name='annual_emissions_from_fuelburn_tonnes_NOx',
            field=models.FloatField(blank=True, help_text="Total tons of NOx emissions associated with the site's onsite fuel burn in an average year.", null=True),
        ),
        migrations.AddField(
            model_name='siteoutputs',
            name='annual_emissions_from_fuelburn_tonnes_NOx_bau',
            field=models.FloatField(blank=True, help_text="Total tons of NOx emissions associated with the site's onsite fuel burn in an average year in the BAU case.", null=True),
        ),
        migrations.AddField(
            model_name='siteoutputs',
            name='annual_emissions_from_fuelburn_tonnes_PM25',
            field=models.FloatField(blank=True, help_text="Total tons of PM2.5 emissions associated with the site's onsite fuel burn in an average year.", null=True),
        ),
        migrations.AddField(
            model_name='siteoutputs',
            name='annual_emissions_from_fuelburn_tonnes_PM25_bau',
            field=models.FloatField(blank=True, help_text="Total tons of PM2.5 emissions associated with the site's onsite fuel burn in an average year in the BAU case.", null=True),
        ),
        migrations.AddField(
            model_name='siteoutputs',
            name='annual_emissions_from_fuelburn_tonnes_SO2',
            field=models.FloatField(blank=True, help_text="Total tons of SO2 emissions associated with the site's onsite fuel burn in an average year.", null=True),
        ),
        migrations.AddField(
            model_name='siteoutputs',
            name='annual_emissions_from_fuelburn_tonnes_SO2_bau',
            field=models.FloatField(blank=True, help_text="Total tons of SO2 emissions associated with the site's onsite fuel burn in an average year in the BAU case.", null=True),
        ),
        migrations.AddField(
            model_name='siteoutputs',
            name='annual_emissions_tonnes_CO2',
            field=models.FloatField(blank=True, help_text="Total tons of CO2 emissions associated with the site's energy consumption in an one.", null=True),
        ),
        migrations.AddField(
            model_name='siteoutputs',
            name='annual_emissions_tonnes_CO2_bau',
            field=models.FloatField(blank=True, help_text="Total tons of CO2 emissions associated with the site's energy consumption in an average year in the BAU case.", null=True),
        ),
        migrations.AddField(
            model_name='siteoutputs',
            name='annual_emissions_tonnes_NOx',
            field=models.FloatField(blank=True, help_text="Total tons of NOx emissions associated with the site's energy consumption in an average year.", null=True),
        ),
        migrations.AddField(
            model_name='siteoutputs',
            name='annual_emissions_tonnes_NOx_bau',
            field=models.FloatField(blank=True, help_text="Total tons of NOx emissions associated with the site's energy consumption in an average year in the BAU case.", null=True),
        ),
        migrations.AddField(
            model_name='siteoutputs',
            name='annual_emissions_tonnes_PM25',
            field=models.FloatField(blank=True, help_text="Total tons of PM2.5 emissions associated with the site's energy consumption in an average year.", null=True),
        ),
        migrations.AddField(
            model_name='siteoutputs',
            name='annual_emissions_tonnes_PM25_bau',
            field=models.FloatField(blank=True, help_text="Total tons of PM2.5 emissions associated with the site's energy consumption in an average year in the BAU case.", null=True),
        ),
        migrations.AddField(
            model_name='siteoutputs',
            name='annual_emissions_tonnes_SO2',
            field=models.FloatField(blank=True, help_text="Total tons of SO2 emissions associated with the site's energy consumption in an average year.", null=True),
        ),
        migrations.AddField(
            model_name='siteoutputs',
            name='annual_emissions_tonnes_SO2_bau',
            field=models.FloatField(blank=True, help_text="Total tons of SO2 emissions associated with the site's energy consumption in an average year in the BAU case.", null=True),
        ),
        migrations.AlterField(
            model_name='electricloadoutputs',
            name='load_series_kw',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), default=list, help_text='Annual hourly time series of electric load', size=None),
        ),
        migrations.AlterField(
            model_name='pvinputs',
            name='tilt',
            field=models.FloatField(blank=True, help_text='PV system tilt. If PV system type is rooftop-fixed, then tilt=10 degrees, else tilt=abs(site.latitude)', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(90)]),
        ),
    ]
