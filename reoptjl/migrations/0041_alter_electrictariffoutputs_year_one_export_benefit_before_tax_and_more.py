# Generated by Django 4.0.7 on 2024-02-01 16:08

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('reoptjl', '0040_apimeta_api_key_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='electrictariffoutputs',
            name='year_one_export_benefit_before_tax',
            field=models.FloatField(blank=True, help_text='Optimal year one value of exported energy. A positive value indicates a benefit.', null=True),
        ),
        migrations.AlterField(
            model_name='electrictariffoutputs',
            name='year_one_export_benefit_before_tax_bau',
            field=models.FloatField(blank=True, help_text='Business as usual year one value of exported energy. A positive value indicates a benefit.', null=True),
        ),
        migrations.AlterField(
            model_name='electricutilityinputs',
            name='cambium_grid_level',
            field=models.TextField(blank=True, default='enduse', help_text="Impacts grid climate emissions calculation. Options: ['enduse' or 'busbar']. Busbar refers to point where bulk generating stations connect to grid; enduse refers to point of consumption (includes distribution loss rate)."),
        ),
        migrations.AlterField(
            model_name='electricutilityinputs',
            name='cambium_levelization_years',
            field=models.IntegerField(blank=True, help_text='Expected lifetime or analysis period of the intervention being studied. Emissions will be averaged over this period. Default: analysis_years (from Financial struct)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AlterField(
            model_name='electricutilityinputs',
            name='cambium_location_type',
            field=models.TextField(blank=True, default='States', help_text="Geographic boundary at which emissions are calculated. Options: ['Nations', 'GEA Regions', 'States']."),
        ),
        migrations.AlterField(
            model_name='generatorinputs',
            name='emissions_factor_lb_CO2_per_gal',
            field=models.FloatField(blank=True, default=22.58, help_text='Pounds of CO2e emitted per gallon of generator fuel burned.', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10000.0)]),
        ),
        migrations.AlterField(
            model_name='generatorinputs',
            name='emissions_factor_lb_NOx_per_gal',
            field=models.FloatField(blank=True, default=0.0775544, help_text='Pounds of NOx emitted per gallon of generator fuel burned.', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10000.0)]),
        ),
        migrations.AlterField(
            model_name='generatorinputs',
            name='emissions_factor_lb_PM25_per_gal',
            field=models.FloatField(blank=True, default=0.0, help_text='Pounds of PM2.5 emitted per gallon of generator fuel burned.', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10000.0)]),
        ),
        migrations.AlterField(
            model_name='generatorinputs',
            name='emissions_factor_lb_SO2_per_gal',
            field=models.FloatField(blank=True, default=0.040020476, help_text='Pounds of SO2 emitted per gallon of generator fuel burned.', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10000.0)]),
        ),
        migrations.AlterField(
            model_name='siteoutputs',
            name='annual_emissions_from_fuelburn_tonnes_CO2',
            field=models.FloatField(blank=True, help_text="Total tons of CO2e emissions associated with the site's onsite fuel burn in an average year.", null=True),
        ),
        migrations.AlterField(
            model_name='siteoutputs',
            name='annual_emissions_from_fuelburn_tonnes_CO2_bau',
            field=models.FloatField(blank=True, help_text="Total tons of CO2e emissions associated with the site's onsite fuel burn in an average year in the BAU case.", null=True),
        ),
        migrations.AlterField(
            model_name='siteoutputs',
            name='annual_emissions_tonnes_CO2',
            field=models.FloatField(blank=True, help_text="Average annual total tons of emissions associated with the site's grid-purchased electricity and on-site fuel consumption.", null=True),
        ),
        migrations.AlterField(
            model_name='siteoutputs',
            name='annual_emissions_tonnes_CO2_bau',
            field=models.FloatField(blank=True, help_text="Total tons of CO2e emissions associated with the site's energy consumption in an average year in the BAU case.", null=True),
        ),
        migrations.AlterField(
            model_name='siteoutputs',
            name='annual_emissions_tonnes_NOx',
            field=models.FloatField(blank=True, help_text="Average annual total tons of emissions associated with the site's grid-purchased electricity and on-site fuel consumption.", null=True),
        ),
        migrations.AlterField(
            model_name='siteoutputs',
            name='annual_emissions_tonnes_PM25',
            field=models.FloatField(blank=True, help_text="Average annual total tons of emissions associated with the site's grid-purchased electricity and on-site fuel consumption.", null=True),
        ),
        migrations.AlterField(
            model_name='siteoutputs',
            name='annual_emissions_tonnes_SO2',
            field=models.FloatField(blank=True, help_text="Average annual total tons of emissions associated with the site's grid-purchased electricity and on-site fuel consumption.", null=True),
        ),
        migrations.AlterField(
            model_name='siteoutputs',
            name='lifecycle_emissions_from_fuelburn_tonnes_CO2',
            field=models.FloatField(blank=True, help_text="Total tons of CO2e emissions associated with the site's onsite fuel burn over the analysis period.", null=True),
        ),
        migrations.AlterField(
            model_name='siteoutputs',
            name='lifecycle_emissions_from_fuelburn_tonnes_CO2_bau',
            field=models.FloatField(blank=True, help_text="Total tons of CO2e emissions associated with the site's onsite fuel burn over the analysis period in the BAU case.", null=True),
        ),
        migrations.AlterField(
            model_name='siteoutputs',
            name='lifecycle_emissions_tonnes_CO2',
            field=models.FloatField(blank=True, help_text="Total tons of CO2e emissions associated with the site's energy consumption over the analysis period.", null=True),
        ),
        migrations.AlterField(
            model_name='siteoutputs',
            name='lifecycle_emissions_tonnes_CO2_bau',
            field=models.FloatField(blank=True, help_text="Total tons of CO2e emissions associated with the site's energy consumption over the analysis period in the BAU case.", null=True),
        ),
    ]
