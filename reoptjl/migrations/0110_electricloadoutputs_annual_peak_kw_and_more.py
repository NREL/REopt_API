# Generated by Django 4.2.25 on 2025-10-24 13:01

import django.contrib.postgres.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('reoptjl', '0109_remove_ghpoutputs_iterations_auto_guess_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='electricloadoutputs',
            name='annual_peak_kw',
            field=models.FloatField(blank=True, help_text='Annual peak energy demand determined from load_series_kw. Does not include electric load for any new heating or cooling techs.', null=True),
        ),
        migrations.AddField(
            model_name='electricloadoutputs',
            name='monthly_calculated_kwh',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), default=list, help_text='Monthly energy consumption calculated by summing up load_series_kw. Does not include electric load for any new heating or cooling techs.', size=None),
        ),
        migrations.AddField(
            model_name='electricloadoutputs',
            name='monthly_peaks_kw',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), default=list, help_text='Monthly peak energy demand determined from load_series_kw. Does not include electric load for any new heating or cooling techs.', size=None),
        ),
        migrations.AddField(
            model_name='electrictariffinputs',
            name='urdb_metadata',
            field=models.JSONField(blank=True, help_text='Utility rate meta data from Utility Rate Database API', null=True),
        ),
        migrations.AddField(
            model_name='electrictariffoutputs',
            name='monthly_electric_to_load_energy_cost_series_before_tax',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), default=list, help_text='Series of monthly cost of power purchased from grid to serve loads.', size=None),
        ),
        migrations.AddField(
            model_name='electrictariffoutputs',
            name='monthly_electric_to_storage_energy_cost_series_before_tax',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), default=list, help_text='Series of monthly cost of power purchased from grid to charge battery storage system.', size=None),
        ),
        migrations.AddField(
            model_name='electrictariffoutputs',
            name='monthly_facility_demand_cost_series_before_tax',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), default=list, help_text='Series of total monthly facility demand charges by month.', size=None),
        ),
        migrations.AddField(
            model_name='electrictariffoutputs',
            name='monthly_gross_tou_demand_cost_series_before_tax',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), default=list, help_text='Series of total time of use demand charges by month.', size=None),
        ),
        migrations.AddField(
            model_name='electrictariffoutputs',
            name='monthly_tou_demand_cost_series_before_tax',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), default=list, help_text='Series of total time of use demand charges for each month.', size=None),
        ),
        migrations.AddField(
            model_name='electrictariffoutputs',
            name='net_metering_electric_to_grid_series_kw',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), default=list, help_text='Series of power exports to the grid up to net metering limit for each timestep.', size=None),
        ),
        migrations.AddField(
            model_name='electrictariffoutputs',
            name='net_metering_excess_electric_to_grid_series_kw',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), default=list, help_text='Series of power exports to the grid above net metering limit for each timestep.', size=None),
        ),
        migrations.AddField(
            model_name='electrictariffoutputs',
            name='net_metering_excess_export_rate_series',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), default=list, help_text='Series of compensation rate in each timestep for exporting power to grid beyond net metering limit.', size=None),
        ),
        migrations.AddField(
            model_name='electrictariffoutputs',
            name='net_metering_excess_monthly_export_cost_benefit_before_tax',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), default=list, help_text='Series of monthly monetary benefit from exporting power to grid above net metering limit.', size=None),
        ),
        migrations.AddField(
            model_name='electrictariffoutputs',
            name='net_metering_excess_monthly_export_series_kwh',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), default=list, help_text='Series of monthly energy exports to grid above net metering limit.', size=None),
        ),
        migrations.AddField(
            model_name='electrictariffoutputs',
            name='net_metering_export_rate_series',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), default=list, help_text='Series of compensation rate in each timestep for exporting power to grid using systems sized up to net metering limit.', size=None),
        ),
        migrations.AddField(
            model_name='electrictariffoutputs',
            name='net_metering_monthly_export_cost_benefit_before_tax',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), default=list, help_text='Year one cost of electricity consumed in each month.', size=None),
        ),
        migrations.AddField(
            model_name='electrictariffoutputs',
            name='net_metering_monthly_export_series_kwh',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), default=list, help_text='Year one cost of electricity consumed in each month.', size=None),
        ),
        migrations.AddField(
            model_name='electrictariffoutputs',
            name='tou_demand_metrics',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='electrictariffoutputs',
            name='wholesale_electric_to_grid_series_kw',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), default=list, help_text='Series of power exports to the grid for wholesale in each timestep.', size=None),
        ),
        migrations.AddField(
            model_name='electrictariffoutputs',
            name='wholesale_export_rate_series',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), default=list, help_text='Series of compensation rate in each timestep for exporting power to grid for wholesale.', size=None),
        ),
        migrations.AddField(
            model_name='electrictariffoutputs',
            name='wholesale_monthly_export_cost_benefit_before_tax',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), default=list, help_text='Series of monthly monetary benefit from exporting power to grid at wholesale rate.', size=None),
        ),
        migrations.AddField(
            model_name='electrictariffoutputs',
            name='wholesale_monthly_export_series_kwh',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), default=list, help_text='Series of monthly energy exports to grid under wholesale benefit.', size=None),
        ),
        migrations.AddField(
            model_name='electrictariffoutputs',
            name='year_one_billed_demand_rate_series',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='electrictariffoutputs',
            name='year_one_billed_energy_rate_series',
            field=models.JSONField(blank=True, help_text='Series of billed energy rates for each timestep in year one.', null=True),
        ),
        migrations.AddField(
            model_name='electrictariffoutputs',
            name='year_one_billed_energy_rate_tier_limits',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='electrictariffoutputs',
            name='year_one_billed_facilitydemand_monthly_rate_series',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='electrictariffoutputs',
            name='year_one_billed_facilitydemand_monthly_rate_tier_limits',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='electrictariffoutputs',
            name='year_one_billed_tou_demand_rate_tier_limits',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='electrictariffoutputs',
            name='year_one_electric_to_load_energy_cost_series_before_tax',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), default=list, help_text='Series of cost of power purchased from grid to serve load in each timestep.', size=None),
        ),
        migrations.AddField(
            model_name='electrictariffoutputs',
            name='year_one_electric_to_storage_energy_cost_series_before_tax',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), default=list, help_text='Series of cost of power purchased from grid to charge battery storage system in each timestep.', size=None),
        ),
        migrations.AddField(
            model_name='electrictariffoutputs',
            name='year_one_monthly_fixed_cost',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), default=list, help_text='Year one fixed utility costs for each month.', size=None),
        ),
    ]
