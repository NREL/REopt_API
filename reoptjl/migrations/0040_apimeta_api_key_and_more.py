# Generated by Django 4.0.7 on 2024-01-30 22:17

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('reoptjl', '0039_boilerinputs_boileroutputs_steamturbineinputs_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='apimeta',
            name='api_key',
            field=models.TextField(blank=True, default='', help_text='NREL Developer API key of the user'),
        ),
        migrations.AddField(
            model_name='financialoutputs',
            name='lifecycle_MG_upgrade_and_fuel_cost_bau',
            field=models.FloatField(blank=True, help_text='BAU Component of lifecycle costs (LCC). This is the cost to upgrade generation and storage technologies to be included in microgridplus present value of microgrid fuel costs.', null=True),
        ),
        migrations.AddField(
            model_name='financialoutputs',
            name='lifecycle_chp_standby_cost_after_tax_bau',
            field=models.FloatField(blank=True, help_text='BAU Component of lifecycle costs (LCC). This value is the present value of all CHP standby charges, after tax.', null=True),
        ),
        migrations.AddField(
            model_name='financialoutputs',
            name='lifecycle_elecbill_after_tax_bau',
            field=models.FloatField(blank=True, help_text='BAU Component of lifecycle costs (LCC). This value is the present value of all electric utility charges, after tax.', null=True),
        ),
        migrations.AddField(
            model_name='financialoutputs',
            name='lifecycle_outage_cost_bau',
            field=models.FloatField(blank=True, help_text='BAU Component of lifecycle costs (LCC). Expected outage cost.', null=True),
        ),
        migrations.AddField(
            model_name='financialoutputs',
            name='lifecycle_production_incentive_after_tax_bau',
            field=models.FloatField(blank=True, help_text='BAU Component of lifecycle costs (LCC). This value is the present value of all production-based incentives, after tax.', null=True),
        ),
        migrations.AlterField(
            model_name='generatorinputs',
            name='emissions_factor_lb_CO2_per_gal',
            field=models.FloatField(blank=True, default=22.58, help_text='Pounds of CO2 emitted per gallon of generator fuel burned.', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10000.0)]),
        ),
    ]
