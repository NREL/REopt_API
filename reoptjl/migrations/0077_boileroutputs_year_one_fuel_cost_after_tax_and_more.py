# Generated by Django 4.0.7 on 2025-02-19 05:32

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('reoptjl', '0076_ashpspaceheaterinputs_force_dispatch_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='boileroutputs',
            name='year_one_fuel_cost_after_tax',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='chpoutputs',
            name='year_one_fuel_cost_after_tax',
            field=models.FloatField(blank=True, help_text='Cost of fuel consumed by the CHP system in year one, after tax [\\$]', null=True),
        ),
        migrations.AddField(
            model_name='chpoutputs',
            name='year_one_standby_cost_after_tax',
            field=models.FloatField(blank=True, help_text='CHP standby charges in year one, after tax [\\$]', null=True),
        ),
        migrations.AddField(
            model_name='electrictariffoutputs',
            name='year_one_bill_after_tax',
            field=models.FloatField(blank=True, help_text='Optimal year one utility bill, after tax', null=True),
        ),
        migrations.AddField(
            model_name='electrictariffoutputs',
            name='year_one_bill_after_tax_bau',
            field=models.FloatField(blank=True, help_text='Business as usual year one utility bill, after tax', null=True),
        ),
        migrations.AddField(
            model_name='electrictariffoutputs',
            name='year_one_export_benefit_after_tax',
            field=models.FloatField(blank=True, help_text='Optimal year one value of exported energy, after tax. A positive value indicates a benefit.', null=True),
        ),
        migrations.AddField(
            model_name='electrictariffoutputs',
            name='year_one_export_benefit_after_tax_bau',
            field=models.FloatField(blank=True, help_text='Business as usual year one value of exported energy, after tax. A positive value indicates a benefit.', null=True),
        ),
        migrations.AddField(
            model_name='existingboileroutputs',
            name='year_one_fuel_cost_after_tax',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='existingboileroutputs',
            name='year_one_fuel_cost_after_tax_bau',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='financialoutputs',
            name='capital_costs_after_non_discounted_incentives',
            field=models.FloatField(blank=True, help_text='Capital costs for all technologies, in present value, after all non-discounted incentives including MACRS, including present value of replacement costs', null=True),
        ),
        migrations.AddField(
            model_name='financialoutputs',
            name='year_one_fuel_cost_after_tax',
            field=models.FloatField(blank=True, help_text='Year one fuel cost of all combined fuel-burning techs, after tax.', null=True),
        ),
        migrations.AddField(
            model_name='financialoutputs',
            name='year_one_fuel_cost_after_tax_bau',
            field=models.FloatField(blank=True, help_text='Year one fuel cost of all combined fuel-burning techs, after tax in the BAU case.', null=True),
        ),
        migrations.AddField(
            model_name='financialoutputs',
            name='year_one_fuel_cost_before_tax',
            field=models.FloatField(blank=True, help_text='Year one fuel cost of all combined fuel-burning techs, before tax.', null=True),
        ),
        migrations.AddField(
            model_name='financialoutputs',
            name='year_one_fuel_cost_before_tax_bau',
            field=models.FloatField(blank=True, help_text='Year one fuel cost of all combined fuel-burning techs, before tax in the BAU case.', null=True),
        ),
        migrations.AddField(
            model_name='financialoutputs',
            name='year_one_om_costs_after_tax_bau',
            field=models.FloatField(blank=True, help_text='Year one operations and maintenance cost after tax in the BAU case.', null=True),
        ),
        migrations.AddField(
            model_name='ghpoutputs',
            name='avoided_capex_by_ghp_present_value',
            field=models.FloatField(blank=True, null=True),
        ),
    ]
