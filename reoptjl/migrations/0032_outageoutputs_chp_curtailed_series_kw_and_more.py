# Generated by Django 4.0.4 on 2023-03-22 23:28

import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('reoptjl', '0031_rename_unserved_load_series_outageoutputs_unserved_load_series_kw_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='outageoutputs',
            name='chp_curtailed_series_kw',
            field=django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True), blank=True, default=list, size=None), blank=True, default=list, size=None), blank=True, default=list, help_text='Array of CHP power curtailed in every outage modeled. Outage duration changes along the first dimension, outage start time changes along the second dimension, and hour within outage changes along the third dimension.', size=None),
        ),
        migrations.AddField(
            model_name='outageoutputs',
            name='chp_fuel_used_per_outage_mmbtu',
            field=django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True), blank=True, default=list, size=None), blank=True, default=list, help_text='CHP fuel used in each outage modeled. Outage duration changes along the first dimension and outage start time changes along the second dimension.', size=None),
        ),
        migrations.AddField(
            model_name='outageoutputs',
            name='chp_microgrid_size_kw',
            field=models.FloatField(blank=True, help_text='Optimal CHP electric capacity included in the microgrid.', null=True),
        ),
        migrations.AddField(
            model_name='outageoutputs',
            name='chp_microgrid_upgrade_cost',
            field=models.FloatField(blank=True, help_text='Capital cost of including the CHP system in the microgrid.', null=True),
        ),
        migrations.AddField(
            model_name='outageoutputs',
            name='chp_to_load_series_kw',
            field=django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True), blank=True, default=list, size=None), blank=True, default=list, size=None), blank=True, default=list, help_text='Array of CHP power used to meet load in every outage modeled. Outage duration changes along the first dimension, outage start time changes along the second dimension, and hour within outage changes along the third dimension.', size=None),
        ),
        migrations.AddField(
            model_name='outageoutputs',
            name='chp_to_storage_series_kw',
            field=django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True), blank=True, default=list, size=None), blank=True, default=list, size=None), blank=True, default=list, help_text='Array of CHP power sent to the battery in every outage modeled. Outage duration changes along the first dimension, outage start time changes along the second dimension, and hour within outage changes along the third dimension.', size=None),
        ),
        migrations.AlterField(
            model_name='financialinputs',
            name='microgrid_upgrade_cost_fraction',
            field=models.FloatField(blank=True, default=0, help_text='Additional cost, in percent of non-islandable capital costs, to make a distributed energy system islandable from the grid and able to serve critical loads. Includes all upgrade costs such as additional labor and critical load panels. Costs apply only when modeling outages using the outage_start_time_steps, outage_durations, and outage_probabilities inputs, and do not apply when modeling a single outage using outage_start_time_step and outage_end_time_step.', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='financialoutputs',
            name='microgrid_upgrade_cost',
            field=models.FloatField(blank=True, help_text='Cost to make a distributed energy system islandable from the grid. Determined by multiplying the total capital costs of resultant energy systems from REopt (such as PV and Storage system) with the input value for microgrid_upgrade_cost_fraction (which defaults to 0).', null=True),
        ),
    ]
