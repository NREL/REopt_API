version: "2.1"

services:

  redis-nginx:
    container_name: redis-nginx
    image: redis
    command: redis-server
    expose:
      - 6379

  db-nginx:
    container_name: db-nginx
    image: postgres
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=reopt
      - POSTGRES_PASSWORD=reopt
      - POSTGRES_DB=reopt
    ports:
      - 5432:5432

  celery-nginx:
    container_name: celery-nginx
    build:
      context: .
    image: base-api-image
    command: >
      "celery -A reopt_api worker -l info"
    environment:
      - APP_ENV=local
      - SQL_HOST=db-nginx
      - SQL_PORT=5432
      - REDIS_HOST=redis-nginx
      - SOLVER=xpress
      - JULIA_HOST=julia-nginx
    volumes:
      - .:/opt/reopt
    depends_on:
      - db-nginx
      - redis-nginx
      - julia-nginx

  django-nginx:
    image: base-api-image
    container_name: django-nginx
    command: >
      "python manage.py migrate
      && /opt/reopt/bin/wait-for-it.bash -t 0 julia-nginx:8081 -- python manage.py runserver 0.0.0.0:8000"
    environment:
      - APP_ENV=local
      - SQL_HOST=db-nginx
      - SQL_PORT=5432
      - REDIS_HOST=redis-nginx
      - SOLVER=xpress
      - JULIA_HOST=julia-nginx
    depends_on:
      - db-nginx
      - redis-nginx
      - julia-nginx
      - celery-nginx
    expose:
      - 8000
    volumes:
      - .:/opt/reopt

  nginx:
    build: ./nginx
    ports:
      - 80:80
    depends_on:
      - django-nginx
    restart: "on-failure"

  julia-nginx:
    container_name: julia-nginx
    build:
      context: julia_src/
      dockerfile: Dockerfile.highs
    command: bash ./run_julia_servers.sh 8
    environment:
      - JULIA_NUM_THREADS=2
    expose:
      - 8081
    volumes:
      - ./julia_src:/opt/julia_src

volumes:
  pgdata:
