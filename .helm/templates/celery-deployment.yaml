apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-celery-deployment
  labels:
    app: {{ .Chart.Name }}-celery
spec:
  replicas: {{ .Values.celeryReplicas }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}-celery
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}-celery
        appImageTagChecksum: {{ index .Values.werf.image "reopt-api" | sha1sum }}
    spec:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchExpressions:
              - key: app
                operator: In
                values:
                  - {{ .Chart.Name }}-celery
              - key: appImageTagChecksum
                operator: In
                values:
                  - {{ index .Values.werf.image "reopt-api" | sha1sum }}
      imagePullSecrets:
        - name: {{ .Chart.Name }}-ecr-image-pull-secret
      volumes:
        - name: {{ .Chart.Name }}-secrets-volume
          secret:
            secretName: {{ .Chart.Name }}-secrets
      initContainers:
        - name: {{ .Chart.Name }}-ready-wait
          image: {{ index .Values.werf.image "reopt-api" }}
          args: ["bin/ready-wait"]
          envFrom:
            - configMapRef:
                name: {{ .Chart.Name }}-base-config-map
          volumeMounts:
            - name: {{ .Chart.Name }}-secrets-volume
              readOnly: true
              mountPath: /opt/reopt/keys.py
              subPath: {{ .Values.appEnv }}-keys.py
      containers:
        - name: {{ .Chart.Name }}-celery
          image: {{ index .Values.werf.image "reopt-api" }}
          args: ["bin/worker"]
          envFrom:
            - configMapRef:
                name: {{ .Chart.Name }}-base-config-map
          env:
            - name: JULIA_HOST
              value: "localhost"
          volumeMounts:
            - name: {{ .Chart.Name }}-secrets-volume
              readOnly: true
              mountPath: /opt/reopt/keys.py
              subPath: {{ .Values.appEnv }}-keys.py
#          readinessProbe:
#            exec:
#              command: ["pgrep", "-f", "bin/celery"]
#            periodSeconds: 5
#            timeoutSeconds: 3
#            failureThreshold: 3
#          livenessProbe:
#            exec:
#              command: ["pgrep", "-f", "bin/celery"]
#            initialDelaySeconds: 30
#            periodSeconds: 60
#            timeoutSeconds: 30
#            failureThreshold: 10
          resources:
            requests:
              cpu: {{ .Values.celeryCpuRequest | quote }}
              memory: {{ .Values.celeryMemoryRequest | quote }}
            limits:
              cpu: {{ .Values.celeryCpuLimit | quote }}
              memory: {{ .Values.celeryMemoryLimit | quote }}

        - name: {{ .Chart.Name }}-julia
          image: {{ index .Values.werf.image "julia-api" }}
          args: ["julia", "--project=/opt/julia_src", "http.jl"]
          ports:
            - containerPort: 8081
          env:
            - name: JULIA_NUM_THREADS
              value: "4"
          envFrom:
            - configMapRef:
                name: {{ .Chart.Name }}-base-config-map
          resources:
            requests:
              cpu:  {{ .Values.juliaCpuRequest | quote }}
              memory: {{ .Values.juliaMemoryRequest | quote }}
            limits:
              cpu: {{ .Values.juliaCpuLimit | quote }}
              memory: {{ .Values.juliaMemoryLimit | quote }}
