# Generated by Django 4.0.2 on 2022-04-28 16:33

import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('job', '0005_boilerinputs_boileroutputs_existingboilerinputs_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='boilerinputs',
            name='fuel_cost_per_mmbtu',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, validators=[django.core.validators.MinValueValidator(0)]), blank=True, default=list, size=None),
        ),
        migrations.AlterField(
            model_name='boilerinputs',
            name='installed_cost_per_mmbtu_per_hour',
            field=models.FloatField(blank=True, default=293000.0, help_text='Thermal power-based cost', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000000000.0)]),
        ),
        migrations.AlterField(
            model_name='boilerinputs',
            name='om_cost_per_mmbtu',
            field=models.FloatField(blank=True, default=0.0, help_text='Thermal energy-based variable O&M cost', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000000000.0)]),
        ),
        migrations.AlterField(
            model_name='boilerinputs',
            name='om_cost_per_mmbtu_per_hour',
            field=models.FloatField(blank=True, default=2930.0, help_text='Thermal power-based fixed O&M cost', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000000000.0)]),
        ),
        migrations.AlterField(
            model_name='existingboilerinputs',
            name='fuel_cost_per_mmbtu',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, validators=[django.core.validators.MinValueValidator(0)]), blank=True, default=list, help_text='The ExistingBoiler default operating cost is zero. Please provide this field to include non-zero BAU heating costs. The `fuel_cost_per_mmbtu` can be a scalar, a list of 12 monthly values, or a time series of values for every time step.ExistingBoiler', size=None),
        ),
        migrations.AlterField(
            model_name='existingboilerinputs',
            name='max_heat_demand_kw',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000000000.0)]),
        ),
        migrations.AlterField(
            model_name='existingboilerinputs',
            name='max_thermal_factor_on_peak_load',
            field=models.FloatField(blank=True, default=1.25, help_text='Factor on peak thermal LOAD which the boiler can supply', null=True, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(5.0)]),
        ),
    ]
