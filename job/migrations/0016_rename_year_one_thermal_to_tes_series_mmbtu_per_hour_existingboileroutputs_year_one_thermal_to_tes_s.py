# Generated by Django 4.0.6 on 2022-12-23 22:15

import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('job', '0015_coolingloadinputs_coolingloadoutputs_and_more'),
    ]

    operations = [
        migrations.RenameField(
            model_name='existingboileroutputs',
            old_name='year_one_thermal_to_tes_series_mmbtu_per_hour',
            new_name='year_one_thermal_to_tes_series_series_mmbtu_per_hour',
        ),
        migrations.AddField(
            model_name='domestichotwaterloadinputs',
            name='addressable_load_fraction',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1.0)]), blank=True, default=list, help_text='Fraction of input fuel load which is addressable by heating technologies (default is 1.0).Can be a scalar or vector with length aligned with use of monthly_mmbtu or fuel_loads_mmbtu_per_hour.', size=None),
        ),
        migrations.AddField(
            model_name='spaceheatingloadinputs',
            name='addressable_load_fraction',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1.0)]), blank=True, default=list, help_text='Fraction of input fuel load which is addressable by heating technologies (default is 1.0).Can be a scalar or vector with length aligned with use of monthly_mmbtu (12) or fuel_loads_mmbtu_per_hour.', size=None),
        ),
        migrations.AlterField(
            model_name='domestichotwaterloadinputs',
            name='fuel_loads_mmbtu_per_hour',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True), blank=True, default=list, help_text='Vector of hot water fuel loads [mmbtu/hour] over one year. Must be hourly (8,760 samples), 30 minute (17,520 samples), or 15 minute (35,040 samples). All non-net load values must be greater than or equal to zero. ', size=None),
        ),
        migrations.AlterField(
            model_name='existingboilerinputs',
            name='fuel_cost_per_mmbtu',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(validators=[django.core.validators.MinValueValidator(0)]), default=list, help_text='The `fuel_cost_per_mmbtu` is a required input and can be a scalar, a list of 12 monthly values, or a time series of values for every time step.If a scalar or a vector of 12 values are provided, then the value is scaled up to 8760 values.If a vector of 8760, 17520, or 35040 values is provided, it is adjusted to match timesteps per hour in the optimization.', size=None),
        ),
        migrations.AlterField(
            model_name='spaceheatingloadinputs',
            name='fuel_loads_mmbtu_per_hour',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True), blank=True, default=list, help_text='Vector of space heating fuel loads [mmbtu/hr] over one year. Must be hourly (8,760 samples), 30 minute (17,520 samples), or 15 minute (35,040 samples). All non-net load values must be greater than or equal to zero. ', size=None),
        ),
        migrations.AlterField(
            model_name='spaceheatingloadinputs',
            name='monthly_mmbtu',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100000000.0)]), blank=True, default=list, help_text="Monthly site space heating energy consumption in [MMbtu] (array of length 12). Used to scale simulated default building load profile for the site's climate zone", size=None),
        ),
    ]
