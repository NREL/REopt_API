# Generated by Django 4.0.4 on 2022-07-06 19:03

import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('job', '0005_remove_electrictariffinputs_coincident_peak_load_active_timesteps_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='electricloadoutputs',
            name='offgrid_annual_oper_res_provided_series_kwh',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), default=list, help_text='Total operating reserves provided on an annual basis, for off-grid scenarios only', size=None),
        ),
        migrations.AlterField(
            model_name='electricloadoutputs',
            name='offgrid_annual_oper_res_required_series_kwh',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), default=list, help_text='Total operating reserves required on an annual basis, for off-grid scenarios only', size=None),
        ),
        migrations.AlterField(
            model_name='electricloadoutputs',
            name='offgrid_load_met_pct',
            field=models.FloatField(blank=True, help_text='Percentage of total electric load met on an annual basis, for off-grid scenarios only', null=True),
        ),
        migrations.AlterField(
            model_name='electricloadoutputs',
            name='offgrid_load_met_series_kw',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(blank=True, null=True), default=list, help_text='Percentage of total electric load met on an annual basis, for off-grid scenarios only', size=None),
        ),
        migrations.AlterField(
            model_name='financialinputs',
            name='offgrid_other_annual_costs',
            field=models.FloatField(blank=True, default=0.0, help_text='Only applicable when off_grid_flag is true. Considered tax deductible for owner. Costs are per year.', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000000.0)]),
        ),
        migrations.AlterField(
            model_name='financialinputs',
            name='offgrid_other_capital_costs',
            field=models.FloatField(blank=True, default=0.0, help_text='Only applicable when off_grid_flag is true, applies a straight-line depreciation to this capex cost, reducing taxable income.', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000000.0)]),
        ),
        migrations.AlterField(
            model_name='financialoutputs',
            name='lifecycle_MG_upgrade_and_fuel_cost',
            field=models.FloatField(blank=True, help_text='Component of lifecycle costs, this is the cost to upgrade generation and storage technologies to be included in microgridplus present value of microgrid fuel costs.', null=True),
        ),
        migrations.AlterField(
            model_name='financialoutputs',
            name='lifecycle_chp_standby_cost_after_tax',
            field=models.FloatField(blank=True, help_text='Component of lifecycle costs, this value is the present value of all CHP standby charges, after tax.', null=True),
        ),
        migrations.AlterField(
            model_name='financialoutputs',
            name='lifecycle_elecbill_after_tax',
            field=models.FloatField(blank=True, help_text='Component of lifecycle costs, this value is the present value of all electric utility charges, after tax.', null=True),
        ),
        migrations.AlterField(
            model_name='financialoutputs',
            name='lifecycle_fuel_costs_after_tax',
            field=models.FloatField(blank=True, help_text='Component of lifecycle costs, this value is the present value of all fuel costs over the analysis period, after tax.', null=True),
        ),
        migrations.AlterField(
            model_name='financialoutputs',
            name='lifecycle_generation_tech_capital_costs',
            field=models.FloatField(blank=True, help_text='Component of lifecycle costs, this value is the net capital costs for all generation technologiesCosts are given in present value, including replacement costs and incentives.This value does not include offgrid_other_capital_costs.', null=True),
        ),
        migrations.AlterField(
            model_name='financialoutputs',
            name='lifecycle_offgrid_other_annual_costs_after_tax',
            field=models.FloatField(blank=True, help_text='Component of lifecycle costs, this value is the present value of offgrid_other_annual_costs over the analysis period, after tax.', null=True),
        ),
        migrations.AlterField(
            model_name='financialoutputs',
            name='lifecycle_offgrid_other_capital_costs',
            field=models.FloatField(blank=True, help_text="Component of lifecycle costs, this value is equal to offgrid_other_capital_costs with straight line depreciation applied over analysis period. The depreciation expense is assumed to reduce the owner's taxable income.", null=True),
        ),
        migrations.AlterField(
            model_name='financialoutputs',
            name='lifecycle_om_costs_after_tax',
            field=models.FloatField(blank=True, help_text='Component of lifecycle costs, this value is the present value of all O&M costs, after tax.', null=True),
        ),
        migrations.AlterField(
            model_name='financialoutputs',
            name='lifecycle_outage_cost',
            field=models.FloatField(blank=True, help_text='Component of lifecycle costs, expected outage cost.', null=True),
        ),
        migrations.AlterField(
            model_name='financialoutputs',
            name='lifecycle_production_incentive_after_tax',
            field=models.FloatField(blank=True, help_text='Component of lifecycle costs, this value is the present value of all production-based incentives, after tax.', null=True),
        ),
        migrations.AlterField(
            model_name='financialoutputs',
            name='lifecycle_storage_capital_costs',
            field=models.FloatField(blank=True, help_text='Component of lifecycle costs, this value is the Net capital costs for all storage technologiesValue is in present value, including replacement costs and incentives.This value does not include offgrid_other_capital_costs.', null=True),
        ),
        migrations.AlterField(
            model_name='financialoutputs',
            name='offgrid_microgrid_lcoe_dollars_per_kwh',
            field=models.FloatField(blank=True, help_text='Levelized cost of electricity for modeled off-grid system.', null=True),
        ),
        migrations.AlterField(
            model_name='financialoutputs',
            name='replacements_future_cost_after_tax',
            field=models.FloatField(blank=True, help_text='Future cost of replacing storage and/or generator systems, after tax.', null=True),
        ),
        migrations.AlterField(
            model_name='financialoutputs',
            name='replacements_present_cost_after_tax',
            field=models.FloatField(blank=True, help_text='Present value cost of replacing storage and/or generator systems, after tax.', null=True),
        ),
        migrations.AlterField(
            model_name='settings',
            name='off_grid_flag',
            field=models.BooleanField(blank=True, default=False, help_text='Set to true to enable off-grid analyses'),
        ),
        migrations.AlterField(
            model_name='settings',
            name='run_bau',
            field=models.BooleanField(blank=True, default=True, help_text='If True then the Business-As-Usual scenario is also solved to provide additional outputs such as the LCC and BAU costs.', null=True),
        ),
    ]
