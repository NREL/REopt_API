# Generated by Django 4.0.4 on 2022-07-15 20:03

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('job', '0009_electricutilityinputs_emissions_factor_co2_decrease_pct_and_more'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='electrictariffoutputs',
            name='emissions_region',
        ),
        migrations.RemoveField(
            model_name='electricutilityoutputs',
            name='year_one_emissions_bau_lb_C02',
        ),
        migrations.RemoveField(
            model_name='electricutilityoutputs',
            name='year_one_emissions_lb_C02',
        ),
        migrations.RemoveField(
            model_name='siteoutputs',
            name='lifecycle_emissions_cost_climate_bau',
        ),
        migrations.RemoveField(
            model_name='siteoutputs',
            name='lifecycle_emissions_cost_health_bau',
        ),
        migrations.AddField(
            model_name='electricutilityoutputs',
            name='distance_to_emissions_region_meters',
            field=models.FloatField(blank=True, help_text='Distance in meters from the site to the nearest AVERT emissions region.', null=True),
        ),
        migrations.AddField(
            model_name='electricutilityoutputs',
            name='emissions_region',
            field=models.TextField(blank=True, help_text='Name of the AVERT emissions region used. Determined from site longitude and latitude if emissions_region and emissions_factor_series_lb_<pollutant>_per_kwh inputs were not provided.'),
        ),
        migrations.AddField(
            model_name='electricutilityoutputs',
            name='lifecycle_emissions_tonnes_CO2',
            field=models.FloatField(blank=True, help_text="Total tons of CO2 emissions associated with the site's grid-purchased electricity over the analysis period. If include_exported_elec_emissions_in_total is False, this value only reflects grid purchaes. Otherwise, it accounts for emissions offset from any export to the grid.", null=True),
        ),
        migrations.AddField(
            model_name='electricutilityoutputs',
            name='lifecycle_emissions_tonnes_CO2_bau',
            field=models.FloatField(blank=True, help_text="Total tons of CO2 emissions associated with the site's grid-purchased electricity over the analysis period in the BAU case. If include_exported_elec_emissions_in_total is False, this value only reflects grid purchaes. Otherwise, it accounts for emissions offset from any export to the grid.", null=True),
        ),
        migrations.AddField(
            model_name='electricutilityoutputs',
            name='lifecycle_emissions_tonnes_NOx',
            field=models.FloatField(blank=True, help_text="Total tons of NOx emissions associated with the site's grid-purchased electricity over the analysis period. If include_exported_elec_emissions_in_total is False, this value only reflects grid purchaes. Otherwise, it accounts for emissions offset from any export to the grid.", null=True),
        ),
        migrations.AddField(
            model_name='electricutilityoutputs',
            name='lifecycle_emissions_tonnes_NOx_bau',
            field=models.FloatField(blank=True, help_text="Total tons of NOx emissions associated with the site's grid-purchased electricity over the analysis period in the BAU case. If include_exported_elec_emissions_in_total is False, this value only reflects grid purchaes. Otherwise, it accounts for emissions offset from any export to the grid.", null=True),
        ),
        migrations.AddField(
            model_name='electricutilityoutputs',
            name='lifecycle_emissions_tonnes_PM25',
            field=models.FloatField(blank=True, help_text="Total tons of PM2.5 emissions associated with the site's grid-purchased electricity over the analysis period. If include_exported_elec_emissions_in_total is False, this value only reflects grid purchaes. Otherwise, it accounts for emissions offset from any export to the grid.", null=True),
        ),
        migrations.AddField(
            model_name='electricutilityoutputs',
            name='lifecycle_emissions_tonnes_PM25_bau',
            field=models.FloatField(blank=True, help_text="Total tons of PM2.5 emissions associated with the site's grid-purchased electricity over the analysis period in the BAU case. If include_exported_elec_emissions_in_total is False, this value only reflects grid purchaes. Otherwise, it accounts for emissions offset from any export to the grid.", null=True),
        ),
        migrations.AddField(
            model_name='electricutilityoutputs',
            name='lifecycle_emissions_tonnes_SO2',
            field=models.FloatField(blank=True, help_text="Total tons of CO2 emissions associated with the site's grid-purchased electricity over the analysis period. If include_exported_elec_emissions_in_total is False, this value only reflects grid purchaes. Otherwise, it accounts for emissions offset from any export to the grid.", null=True),
        ),
        migrations.AddField(
            model_name='electricutilityoutputs',
            name='lifecycle_emissions_tonnes_SO2_bau',
            field=models.FloatField(blank=True, help_text="Total tons of SO2 emissions associated with the site's grid-purchased electricity over the analysis period in the BAU case. If include_exported_elec_emissions_in_total is False, this value only reflects grid purchaes. Otherwise, it accounts for emissions offset from any export to the grid.", null=True),
        ),
        migrations.AddField(
            model_name='electricutilityoutputs',
            name='year_one_emissions_tonnes_CO2',
            field=models.FloatField(blank=True, help_text="Total tons of CO2 emissions associated with the site's grid-purchased electricity in year one. If include_exported_elec_emissions_in_total is False, this value only reflects grid purchaes. Otherwise, it accounts for emissions offset from any export to the grid.", null=True),
        ),
        migrations.AddField(
            model_name='electricutilityoutputs',
            name='year_one_emissions_tonnes_CO2_bau',
            field=models.FloatField(blank=True, help_text="Total tons of CO2 emissions associated with the site's grid-purchased electricity in year one in the BAU case. If include_exported_elec_emissions_in_total is False, this value only reflects grid purchaes. Otherwise, it accounts for emissions offset from any export to the grid.", null=True),
        ),
        migrations.AddField(
            model_name='electricutilityoutputs',
            name='year_one_emissions_tonnes_NOx',
            field=models.FloatField(blank=True, help_text="Total tons of NOx emissions associated with the site's grid-purchased electricity in year one. If include_exported_elec_emissions_in_total is False, this value only reflects grid purchaes. Otherwise, it accounts for emissions offset from any export to the grid.", null=True),
        ),
        migrations.AddField(
            model_name='electricutilityoutputs',
            name='year_one_emissions_tonnes_NOx_bau',
            field=models.FloatField(blank=True, help_text="Total tons of NOx emissions associated with the site's grid-purchased electricity in year one in the BAU case. If include_exported_elec_emissions_in_total is False, this value only reflects grid purchaes. Otherwise, it accounts for emissions offset from any export to the grid.", null=True),
        ),
        migrations.AddField(
            model_name='electricutilityoutputs',
            name='year_one_emissions_tonnes_PM25',
            field=models.FloatField(blank=True, help_text="Total tons of PM2.5 emissions associated with the site's grid-purchased electricity in year one. If include_exported_elec_emissions_in_total is False, this value only reflects grid purchaes. Otherwise, it accounts for emissions offset from any export to the grid.", null=True),
        ),
        migrations.AddField(
            model_name='electricutilityoutputs',
            name='year_one_emissions_tonnes_PM25_bau',
            field=models.FloatField(blank=True, help_text="Total tons of PM2.5 emissions associated with the site's grid-purchased electricity in year one in the BAU case. If include_exported_elec_emissions_in_total is False, this value only reflects grid purchaes. Otherwise, it accounts for emissions offset from any export to the grid.", null=True),
        ),
        migrations.AddField(
            model_name='electricutilityoutputs',
            name='year_one_emissions_tonnes_SO2',
            field=models.FloatField(blank=True, help_text="Total tons of CO2 emissions associated with the site's grid-purchased electricity in year one. If include_exported_elec_emissions_in_total is False, this value only reflects grid purchaes. Otherwise, it accounts for emissions offset from any export to the grid.", null=True),
        ),
        migrations.AddField(
            model_name='electricutilityoutputs',
            name='year_one_emissions_tonnes_SO2_bau',
            field=models.FloatField(blank=True, help_text="Total tons of SO2 emissions associated with the site's grid-purchased electricity in year one in the BAU case. If include_exported_elec_emissions_in_total is False, this value only reflects grid purchaes. Otherwise, it accounts for emissions offset from any export to the grid.", null=True),
        ),
        migrations.AddField(
            model_name='financialoutputs',
            name='lifecycle_emissions_cost_climate_bau',
            field=models.FloatField(blank=True, help_text="Total cost of CO2 emissions associated with the site's energy consumption over the analysis period in the BAU case.", null=True),
        ),
        migrations.AddField(
            model_name='financialoutputs',
            name='lifecycle_emissions_cost_health_bau',
            field=models.FloatField(blank=True, help_text="Total cost of NOx, SO2, and PM2.5 emissions associated with the site's energy consumption over the analysis period in the BAU case.", null=True),
        ),
        migrations.AlterField(
            model_name='electricutilityinputs',
            name='emissions_region',
            field=models.TextField(blank=True, help_text="Name of the AVERT emissions region to use. Options are: 'California', 'Central', 'Florida', 'Mid-Atlantic', 'Midwest', 'Carolinas', 'New England', 'Northwest', 'New York', 'Rocky Mountains', 'Southeast', 'Southwest', 'Tennessee', 'Texas', 'Alaska', 'Hawaii (except Oahu)', 'Hawaii (Oahu)'. If emissions_factor_series_lb_<pollutant>_per_kwh inputs are not provided, emissions_region overrides latitude and longitude in determining emissions factors."),
        ),
    ]
